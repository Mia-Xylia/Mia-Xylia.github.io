{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"python\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2025/05/14/computer-science/python/han4/",
            "url": "http://example.com/2025/05/14/computer-science/python/han4/",
            "title": "函数",
            "date_published": "2025-05-13T16:00:00.000Z",
            "content_html": "<h1 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h1>\n<h2 id=\"入门\"><a class=\"markdownIt-Anchor\" href=\"#入门\">#</a> 入门</h2>\n<p>为完成某一功能的程序指令的集合<br>\n函数分为系统函数（内置函数，模块中提供的函数）和自定义函数</p>\n<ul>\n<li>好处<br>\n 1. 提供的代码的复用性<br>\n 2. 将实现的细节封装起来，供其他函数调用</li>\n<li>基本语法<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE4MTczNy5wbmc=\">基本语法</span><br>\n调用方式：函数名（实参列表）</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"attr\">def cry():</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;喵喵喵&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">def cal01():</span></span><br><span class=\"line\">    <span class=\"string\">sum</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"attr\">for i in range(1001):</span></span><br><span class=\"line\">        <span class=\"string\">sum</span> <span class=\"string\">+=</span> <span class=\"string\">i</span></span><br><span class=\"line\">    <span class=\"string\">print(sum)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">def cal02(n):</span></span><br><span class=\"line\">    <span class=\"string\">sum</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"string\">for</span> <span class=\"string\">i</span> <span class=\"string\">in</span> <span class=\"string\">range(n</span> <span class=\"string\">+</span> <span class=\"attr\">1):</span></span><br><span class=\"line\">        <span class=\"string\">sum</span> <span class=\"string\">+=</span> <span class=\"string\">i</span></span><br><span class=\"line\">    <span class=\"string\">print(sum)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">def</span> <span class=\"string\">get_sum(num1,</span> <span class=\"attr\">num2):</span></span><br><span class=\"line\">    <span class=\"string\">return</span> <span class=\"string\">num1</span> <span class=\"string\">+</span> <span class=\"string\">num2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">cry()</span></span><br><span class=\"line\"><span class=\"string\">cal01()</span></span><br><span class=\"line\"><span class=\"string\">cal02(1000)</span></span><br><span class=\"line\"><span class=\"string\">result</span> <span class=\"string\">=</span> <span class=\"string\">get_sum(2,</span> <span class=\"number\">1</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"函数调用机制\"><a class=\"markdownIt-Anchor\" href=\"#函数调用机制\">#</a> 函数调用机制</h2>\n<p>给程序必要的输入，函数返回结果<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE4NDg0Ni5wbmc=\"> getsum 调用示意图</span></p>\n<h2 id=\"函数的注意事项和使用细节\"><a class=\"markdownIt-Anchor\" href=\"#函数的注意事项和使用细节\">#</a> 函数的注意事项和使用细节</h2>\n<p>1. 函数的参数列表可以是 0 - 多个<br>\n 2. 函数要遵循命名规则<br>\n 3. 函数的变量是局部的<br>\n 4. 函数名相同时，调用最近的函数，就近原则<br>\n 5. 传参方式是位置传参，数据类型不用指定<br>\n 6. 可以有多个返回值，返回值的类型不被限定<br>\n 7. 支持关键字参数（形参名 = 实参值）<br>\n8. 支持默认参数，指定参数时以指定为主，默认参数放在参数列表后<br>\n 9. 支持可变参数，传入的 0 - 多个实参会被组成一个元组 def sum (*args)<br>\n 10. 传入的多个关键字参数时会被组成一个字典 def sum (**arg)<br>\n 11. 调用另外一个文件的函数  import 文件名    文件名。函数名 ()</p>\n<h2 id=\"函数传参机制\"><a class=\"markdownIt-Anchor\" href=\"#函数传参机制\">#</a> 函数传参机制</h2>\n<ul>\n<li>字符串和数值类型的传参机制<br>\n不可变数据类型<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE5MjAwNC5wbmc=\">内存分析图</span></li>\n</ul>\n<h2 id=\"递归机制\"><a class=\"markdownIt-Anchor\" href=\"#递归机制\">#</a> 递归机制</h2>\n<p>递归就是函数自己调用自己<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE5NDYxNi5wbmc=\">内存分析图</span><br>\n将函数命名为 test，这可能会与测试框架（如 pytest）中的某些功能冲突。</p>\n<ul>\n<li>注意事项<br>\n 1. 执行一个函数时，创建一个新的空间<br>\n 2. 函数的变量是独立的<br>\n 3. 必须向递归结束的方向逼近，否则就是无限递归<br>\n 4. 当一个函数执行完毕，或者遇到 return，就会返回，遵守谁调用就把结果返回给谁</li>\n<li>练习</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```请用递归的方式求出斐波那契数1，1，2，3，5，8，13……给你一个整数，求出它的值是多少</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"函数作为参数传递\"><a class=\"markdownIt-Anchor\" href=\"#函数作为参数传递\">#</a> 函数作为参数传递</h1>\n<h1 id=\"lambda匿名函数\"><a class=\"markdownIt-Anchor\" href=\"#lambda匿名函数\">#</a> lambda 匿名函数</h1>\n",
            "tags": [
                "笔记",
                "python基础"
            ]
        },
        {
            "id": "http://example.com/2025/05/13/computer-science/python/han3/",
            "url": "http://example.com/2025/05/13/computer-science/python/han3/",
            "title": "程序控制结构",
            "date_published": "2025-05-12T16:00:00.000Z",
            "content_html": "<h1 id=\"程序流程控制\"><a class=\"markdownIt-Anchor\" href=\"#程序流程控制\">#</a> 程序流程控制</h1>\n<h2 id=\"顺序控制\"><a class=\"markdownIt-Anchor\" href=\"#顺序控制\">#</a> 顺序控制</h2>\n<p>python 定义变量时采用合法的前向引用</p>\n<h2 id=\"分支控制if-else\"><a class=\"markdownIt-Anchor\" href=\"#分支控制if-else\">#</a> 分支控制 if-else</h2>\n<h3 id=\"单分支\"><a class=\"markdownIt-Anchor\" href=\"#单分支\">#</a> 单分支</h3>\n<p>if 条件表达式:<br>\n 代码块<br>\n缩进用于界定代码块，每个代码块应具有相同的缩进长度</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入你的年龄&quot;))</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">age</span> <span class=\"string\">&gt;</span> <span class=\"attr\">18:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;你的年龄大于18，要对自己的行为负责&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMzEwMDM0OC5wbmc=\">流程图</span></p>\n<h3 id=\"双分支\"><a class=\"markdownIt-Anchor\" href=\"#双分支\">#</a> 双分支</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入你的年龄&quot;))</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">age</span> <span class=\"string\">&gt;</span> <span class=\"attr\">18:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;你的年龄大于18，要对自己的行为负责&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMzEwMDczNi5wbmc=\">流程图</span></p>\n<ul>\n<li>练习题<br>\n 1. 韩顺平教育～</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```两个int数的和大于50时输出hello</span> <span class=\"string\">world</span></span><br><span class=\"line\"><span class=\"string\">num1</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入第一个数字：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">num2</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入第二个数字：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">num1</span> <span class=\"string\">+</span> <span class=\"string\">num2</span> <span class=\"string\">&gt;</span> <span class=\"attr\">50:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;hello</span> <span class=\"string\">world&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```两个float变量，第一个数大于10.0，第二个数小于20.0，打印两数之和</span></span><br><span class=\"line\"><span class=\"string\">num1</span> <span class=\"string\">=</span> <span class=\"string\">float(input(&quot;请输入第一个数字：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">num2</span> <span class=\"string\">=</span> <span class=\"string\">float(input(&quot;请输入第二个数字：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">num1&gt;10.0</span> <span class=\"string\">and</span> <span class=\"string\">num2&lt;20.0:</span></span><br><span class=\"line\">    <span class=\"string\">print(num1</span> <span class=\"string\">+</span> <span class=\"string\">num2)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```两个int变量的和是否能被3和5整除</span></span><br><span class=\"line\"><span class=\"string\">num1</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入第一个数字：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">num2</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入第二个数字：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">num</span> <span class=\"string\">=</span> <span class=\"string\">num1</span> <span class=\"string\">+</span> <span class=\"string\">num2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">not</span> <span class=\"string\">num</span> <span class=\"string\">%</span> <span class=\"number\">3</span> <span class=\"string\">and</span> <span class=\"string\">not</span> <span class=\"string\">num</span> <span class=\"string\">%</span> <span class=\"attr\">5:</span></span><br><span class=\"line\">    <span class=\"string\">print(f&quot;&#123;num&#125;既能被3整除又能被5整除&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```判断是否是闰年</span></span><br><span class=\"line\"><span class=\"string\">year</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入要查询的年份&quot;))</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">year</span> <span class=\"string\">%</span> <span class=\"number\">4</span> <span class=\"string\">==</span> <span class=\"number\">0</span> <span class=\"string\">and</span> <span class=\"string\">year</span> <span class=\"string\">%</span> <span class=\"number\">100</span> <span class=\"type\">!=</span> <span class=\"number\">0</span> <span class=\"string\">or</span> <span class=\"string\">year</span> <span class=\"string\">%</span> <span class=\"number\">400</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">    <span class=\"string\">print(f&quot;&#123;year&#125;是闰年&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"多分支\"><a class=\"markdownIt-Anchor\" href=\"#多分支\">#</a> 多分支</h3>\n<p>if:<br>\nelse if/elif:<br>\nelse:<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMzEwNDkzOS5wbmc=\"></span></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;小头儿子的python考试成绩：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">score</span> <span class=\"string\">==</span> <span class=\"attr\">100:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;奖励一辆BMW&quot;)</span></span><br><span class=\"line\"><span class=\"string\">elif</span> <span class=\"string\">score</span> <span class=\"string\">&gt;</span> <span class=\"attr\">80:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;奖励一台iphone13&quot;)</span></span><br><span class=\"line\"><span class=\"string\">elif</span> <span class=\"string\">score</span> <span class=\"string\">&gt;=</span> <span class=\"number\">60</span> <span class=\"string\">and</span> <span class=\"string\">score</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">80:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;奖励一个iPad&quot;)</span></span><br><span class=\"line\"><span class=\"attr\">else:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;什么奖励也没有&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>练习题</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">high</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入男生的身高：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">money</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入男生的财产：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">face</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入男生的相貌，帅/不帅？&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">high_condition</span> <span class=\"string\">=</span> <span class=\"string\">high</span> <span class=\"string\">&gt;</span> <span class=\"number\">180</span></span><br><span class=\"line\"><span class=\"string\">money_condition</span> <span class=\"string\">=</span> <span class=\"string\">money</span> <span class=\"string\">&gt;</span> <span class=\"number\">10000000</span></span><br><span class=\"line\"><span class=\"string\">face_condition</span> <span class=\"string\">=</span> <span class=\"string\">face</span> <span class=\"string\">==</span> <span class=\"string\">&quot;帅&quot;</span></span><br><span class=\"line\"><span class=\"attr\">if high_condition and money_condition and face_condition:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;我一定要嫁给他&quot;)</span></span><br><span class=\"line\"><span class=\"attr\">elif high_condition or money_condition or face_condition:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;嫁吧，比上不足，比下有余&quot;)</span></span><br><span class=\"line\"><span class=\"attr\">else:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;不嫁！&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"嵌套分支\"><a class=\"markdownIt-Anchor\" href=\"#嵌套分支\">#</a> 嵌套分支</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"string\">float(input(&quot;请输入参赛者成绩：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">gender</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入参赛者性别：&quot;)</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">score</span> <span class=\"string\">&gt;</span> <span class=\"attr\">8.0:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">gender</span> <span class=\"string\">==</span> <span class=\"string\">&quot;女&quot;</span><span class=\"string\">:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;进入女子组&quot;)</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;进入男子组&quot;)</span></span><br><span class=\"line\"><span class=\"attr\">else:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;淘汰&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">month</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入月份：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入年龄：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;票价：&quot;)</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"number\">10</span><span class=\"string\">&gt;month&gt;4:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">age</span> <span class=\"string\">&lt;</span> <span class=\"attr\">18:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;30&quot;)</span></span><br><span class=\"line\">    <span class=\"string\">elif</span> <span class=\"string\">age</span> <span class=\"string\">&gt;</span> <span class=\"attr\">60:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;20&quot;)</span></span><br><span class=\"line\">    <span class=\"attr\">else:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;60&quot;)</span></span><br><span class=\"line\"><span class=\"attr\">else:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">age</span> <span class=\"string\">&lt;</span> <span class=\"attr\">18:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;20&quot;)</span></span><br><span class=\"line\">    <span class=\"attr\">else:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;40&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"循环控制\"><a class=\"markdownIt-Anchor\" href=\"#循环控制\">#</a> 循环控制</h2>\n<h3 id=\"for循环控制\"><a class=\"markdownIt-Anchor\" href=\"#for循环控制\">#</a> for 循环控制</h3>\n<p>for 变量 in 范围 / 序列<br>\n循环操作语句<br>\n轮询机制，对指定数据集进行 “轮询处理”<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMzE1NDkzMS5wbmc=\"> 流程图</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMzE2MDE0MC5wbmc=\">内存分析法</span></p>\n<ul>\n<li>细节<br>\n 1. 循环时依次将序列种的数取出献给变量<br>\n 2.range (start,stop,step), 不可变序列，start 默认是 0，step 默认是 1，数列前闭后开</li>\n<li>for-else<br>\nfor 循环正常的完成遍历，在遍历过程中，没有被打断（break）</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"attr\">for i in range(10):</span></span><br><span class=\"line\">    <span class=\"string\">print(i)</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">i</span> <span class=\"string\">==</span> <span class=\"attr\">3:</span></span><br><span class=\"line\">        <span class=\"string\">break</span></span><br><span class=\"line\"><span class=\"attr\">else:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;所有数据都输出了&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"while循环\"><a class=\"markdownIt-Anchor\" href=\"#while循环\">#</a> while 循环</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDA5MjMwOC5wbmc=\">流程图</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDA5MjQ0MC5wbmc=\">内存分析图</span></p>\n<ul>\n<li>while-else<br>\nwhile 循环正常的完成遍历，在遍历过程中，没有被打断（break）</li>\n<li>练习题</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```打印1-100之间所有能被3整除的数</span></span><br><span class=\"line\"><span class=\"string\">i</span> <span class=\"string\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">while</span> <span class=\"string\">i</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">100:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">i</span> <span class=\"string\">%</span> <span class=\"number\">3</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">        <span class=\"string\">print(i)</span></span><br><span class=\"line\">    <span class=\"string\">i</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```打印40-200之间的所有偶数</span></span><br><span class=\"line\"><span class=\"string\">i</span> <span class=\"string\">=</span> <span class=\"number\">40</span></span><br><span class=\"line\"><span class=\"string\">while</span> <span class=\"string\">i</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">200:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">i</span> <span class=\"string\">%</span> <span class=\"number\">2</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">        <span class=\"string\">print(i)</span></span><br><span class=\"line\">    <span class=\"string\">i</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```不断输入姓名，直到exit为止</span></span><br><span class=\"line\"><span class=\"attr\">while True:</span></span><br><span class=\"line\">    <span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入姓名：&quot;)</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">name</span> <span class=\"string\">==</span> <span class=\"attr\">&quot;exit&quot;:</span></span><br><span class=\"line\">        <span class=\"string\">break</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```打印1-100之间所有是9的倍数的整数，统计个数及总和</span></span><br><span class=\"line\"><span class=\"string\">num</span> <span class=\"string\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">count</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">sum</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">while</span> <span class=\"string\">num</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">100:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">num</span> <span class=\"string\">%</span> <span class=\"number\">9</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">        <span class=\"string\">print(num)</span></span><br><span class=\"line\">        <span class=\"string\">count</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"string\">sum</span> <span class=\"string\">+=</span> <span class=\"string\">num</span></span><br><span class=\"line\">    <span class=\"string\">num</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;个数是：&quot;,count)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;总和是：&quot;,sum)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">sum</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入一个整数：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">i</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">while</span> <span class=\"string\">i</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">sum:</span></span><br><span class=\"line\">    <span class=\"string\">print(f&quot;&#123;i&#125;</span> <span class=\"string\">+</span> &#123;<span class=\"string\">sum</span> <span class=\"bullet\">-</span> <span class=\"string\">i</span>&#125; <span class=\"string\">=</span> &#123;<span class=\"string\">sum</span>&#125;<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    i += 1</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"多重循环\"><a class=\"markdownIt-Anchor\" href=\"#多重循环\">#</a> 多重循环</h3>\n<p>将一个循环放在另一个循环体内<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDEwNDMzMy5wbmc=\">嵌套循环</span></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```空心金字塔</span> <span class=\"string\">while-else</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">总层数 total_level</span></span><br><span class=\"line\"><span class=\"string\">目前层数 level</span></span><br><span class=\"line\"><span class=\"string\">当前层数要输出的*数量 num_signal</span></span><br><span class=\"line\"><span class=\"string\">当前层数已输出*数量 print_signal</span></span><br><span class=\"line\"><span class=\"string\">当前层数已输出空格数 num</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">total_level</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;总层数是：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">level</span> <span class=\"string\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">num_signal</span> <span class=\"string\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">print_signal</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">num</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">while</span> <span class=\"string\">level</span> <span class=\"string\">&lt;</span> <span class=\"attr\">total_level:</span></span><br><span class=\"line\"><span class=\"comment\"># 打印*前面的空格</span></span><br><span class=\"line\">    <span class=\"string\">while</span> <span class=\"string\">num</span> <span class=\"string\">&lt;</span> <span class=\"string\">(1</span> <span class=\"string\">+</span> <span class=\"attr\">total_level * 2 - num_signal) / 2 - 1:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;</span> <span class=\"string\">&quot;, end=&quot;</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">        num += 1</span></span><br><span class=\"line\"><span class=\"string\"># 打印空心三角形</span></span><br><span class=\"line\"><span class=\"string\">    while print_signal &lt; num_signal:</span></span><br><span class=\"line\"><span class=\"string\">        if print_signal == 0 or print_signal == num_signal - 1:</span></span><br><span class=\"line\"><span class=\"string\">            print(&quot;</span><span class=\"string\">*&quot;,</span> <span class=\"string\">end=&quot;&quot;)</span></span><br><span class=\"line\">        <span class=\"attr\">else:</span></span><br><span class=\"line\">            <span class=\"string\">print(&quot;</span> <span class=\"string\">&quot;, end=&quot;</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">        print_signal += 1</span></span><br><span class=\"line\"><span class=\"string\">        num += 1</span></span><br><span class=\"line\"><span class=\"string\"># 修改数据</span></span><br><span class=\"line\"><span class=\"string\">    print(&quot;</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    num_signal += 2</span></span><br><span class=\"line\"><span class=\"string\">    print_signal = 0</span></span><br><span class=\"line\"><span class=\"string\">    num = 0</span></span><br><span class=\"line\"><span class=\"string\">    level += 1</span></span><br><span class=\"line\"><span class=\"string\"># 打印最后一行</span></span><br><span class=\"line\"><span class=\"string\">else:</span></span><br><span class=\"line\"><span class=\"string\">    while print_signal &lt; num_signal:</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;</span><span class=\"string\">*&quot;,</span> <span class=\"string\">end=&quot;&quot;)</span></span><br><span class=\"line\">        <span class=\"string\">print_signal</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"string\">print()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">题目要求：</span></span><br><span class=\"line\">    <span class=\"string\">统计三个班的成绩情况，每个班5名同学</span></span><br><span class=\"line\">    <span class=\"string\">求出各个版的平均分和所有班级的平均分，学生的成绩从键盘输入</span></span><br><span class=\"line\">    <span class=\"string\">统计三个班及格人数</span></span><br><span class=\"line\"><span class=\"string\">班级数：num_class</span></span><br><span class=\"line\"><span class=\"string\">学生数</span> <span class=\"string\">student</span></span><br><span class=\"line\"><span class=\"string\">分数</span> <span class=\"string\">score</span></span><br><span class=\"line\"><span class=\"string\">总分</span> <span class=\"string\">all</span></span><br><span class=\"line\"><span class=\"string\">平均分</span> <span class=\"string\">average</span></span><br><span class=\"line\"><span class=\"string\">及格人数</span> <span class=\"string\">count</span></span><br><span class=\"line\"><span class=\"string\">年级及格人数</span> <span class=\"string\">num</span></span><br><span class=\"line\"><span class=\"string\">年级总分</span> <span class=\"string\">sum</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">num_class = int(input(&quot;</span><span class=\"string\">请输入班级个数：&quot;))</span></span><br><span class=\"line\"><span class=\"string\">all</span> <span class=\"string\">=</span> <span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"string\">count</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">sum</span> <span class=\"string\">=</span> <span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"string\">all_student</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">num</span> <span class=\"string\">=0</span></span><br><span class=\"line\"><span class=\"string\">for</span> <span class=\"string\">i</span> <span class=\"string\">in</span> <span class=\"string\">range(1,</span> <span class=\"string\">num_class</span> <span class=\"string\">+</span> <span class=\"attr\">1):</span></span><br><span class=\"line\">    <span class=\"string\">student</span> <span class=\"string\">=</span> <span class=\"string\">int(input(f&quot;请输入&#123;i&#125;班学生数量：&quot;))</span></span><br><span class=\"line\">    <span class=\"string\">all_student</span> <span class=\"string\">+=</span> <span class=\"string\">student</span></span><br><span class=\"line\">    <span class=\"string\">for</span> <span class=\"string\">j</span> <span class=\"string\">in</span> <span class=\"string\">range(1,</span> <span class=\"string\">student</span> <span class=\"string\">+</span> <span class=\"attr\">1):</span></span><br><span class=\"line\">        <span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"string\">int(input(f&quot;请输入第&#123;j&#125;个学生的分数：&quot;))</span></span><br><span class=\"line\">        <span class=\"string\">all</span> <span class=\"string\">+=</span> <span class=\"string\">score</span></span><br><span class=\"line\">        <span class=\"string\">if</span> <span class=\"string\">score</span> <span class=\"string\">&gt;</span> <span class=\"attr\">60:</span></span><br><span class=\"line\">            <span class=\"string\">count</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"string\">average</span> <span class=\"string\">=</span> <span class=\"string\">all</span> <span class=\"string\">/</span> <span class=\"string\">student</span></span><br><span class=\"line\">    <span class=\"string\">print(f&quot;&#123;i&#125;班平均分是&#123;average&#125;，及格人数是&#123;count&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"string\">sum</span> <span class=\"string\">+=</span> <span class=\"string\">all</span></span><br><span class=\"line\">    <span class=\"string\">num</span> <span class=\"string\">+=</span> <span class=\"string\">student</span></span><br><span class=\"line\">    <span class=\"string\">all</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"string\">count</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;所有班级平均分是&#123;sum</span> <span class=\"string\">/</span> <span class=\"string\">num&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"break语句\"><a class=\"markdownIt-Anchor\" href=\"#break语句\">#</a> break 语句</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\">n = random.randint(1,100)</span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE2NTIyOS5wbmc=\">流程图</span></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```随机生成1-100的数，直到97，看看用了几次</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">random</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">count</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">while True:</span></span><br><span class=\"line\">    <span class=\"string\">num</span> <span class=\"string\">=</span> <span class=\"string\">random.randint(1,</span> <span class=\"number\">100</span><span class=\"string\">)</span></span><br><span class=\"line\">    <span class=\"string\">count</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">num</span> <span class=\"string\">==</span> <span class=\"attr\">97:</span></span><br><span class=\"line\">        <span class=\"string\">print(count)</span></span><br><span class=\"line\">        <span class=\"string\">break</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意事项和细节<br>\n 1. 终结最近的 while 循环<br>\n 2. 用在 for/while 循环中<br>\n 3. 如果 for 循环被 break 终结，该循环会保持当前值</li>\n<li>练习题</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```1-100以内的随机数求和，输出i的值（第几次和大于20）</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">random</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">sum</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">i</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">while True:</span></span><br><span class=\"line\">    <span class=\"string\">num</span> <span class=\"string\">=</span> <span class=\"string\">random.randint(1,</span> <span class=\"number\">100</span><span class=\"string\">)</span></span><br><span class=\"line\">    <span class=\"string\">sum</span> <span class=\"string\">+=</span> <span class=\"string\">num</span></span><br><span class=\"line\">    <span class=\"string\">i</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"string\">print(num)</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">sum</span> <span class=\"string\">&gt;</span> <span class=\"attr\">20:</span></span><br><span class=\"line\">        <span class=\"string\">print(f&quot;和大于20，i是&#123;i&#125;&quot;)</span></span><br><span class=\"line\">        <span class=\"string\">break</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```登陆验证</span></span><br><span class=\"line\"><span class=\"attr\">for i in range(3):</span></span><br><span class=\"line\">    <span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入用户名：&quot;)</span></span><br><span class=\"line\">    <span class=\"string\">code</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入密码：&quot;))</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">name</span> <span class=\"string\">==</span> <span class=\"string\">&quot;张无忌&quot;</span> <span class=\"string\">and</span> <span class=\"string\">code</span> <span class=\"string\">==</span> <span class=\"attr\">888:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;登陆成功&quot;)</span></span><br><span class=\"line\">        <span class=\"string\">break</span></span><br><span class=\"line\">    <span class=\"attr\">else:</span></span><br><span class=\"line\">        <span class=\"string\">print(f&quot;密码或用户名错误，登陆失败，还有&#123;2-i&#125;次机会&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"continue语句\"><a class=\"markdownIt-Anchor\" href=\"#continue语句\">#</a> continue 语句</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE3MjAyNC5wbmc=\">流程图</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxNDE3MjMxNC5wbmc=\">内存图</span></p>\n<h3 id=\"return语句\"><a class=\"markdownIt-Anchor\" href=\"#return语句\">#</a> return 语句</h3>\n<p>表示跳出所在的函数</p>\n<h1 id=\"练习题\"><a class=\"markdownIt-Anchor\" href=\"#练习题\">#</a> 练习题</h1>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">某人有100000元，没经过一个路口，需要缴费，规则如下：</span></span><br><span class=\"line\"><span class=\"string\">当现金 &gt; 50000时，每次交5%</span></span><br><span class=\"line\"><span class=\"string\">当现金 &lt;= 50000时，每次交1000</span></span><br><span class=\"line\"><span class=\"string\">计算可以经过多少路口</span></span><br><span class=\"line\"><span class=\"string\">路口数 num</span></span><br><span class=\"line\"><span class=\"string\">剩余金额 money</span></span><br><span class=\"line\"><span class=\"string\">总金额 all</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">money</span> <span class=\"string\">=</span> <span class=\"number\">100000</span></span><br><span class=\"line\"><span class=\"string\">num</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">while True:</span></span><br><span class=\"line\">    <span class=\"string\">if</span> <span class=\"string\">money</span> <span class=\"string\">&gt;</span> <span class=\"attr\">50000:</span></span><br><span class=\"line\">        <span class=\"string\">money</span> <span class=\"string\">-=</span> <span class=\"number\">0.05</span> <span class=\"string\">*</span> <span class=\"string\">money</span></span><br><span class=\"line\">        <span class=\"string\">num</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"string\">elif</span> <span class=\"number\">1000</span> <span class=\"string\">&lt;</span> <span class=\"string\">money</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">50000:</span></span><br><span class=\"line\">        <span class=\"string\">money</span> <span class=\"string\">-=</span> <span class=\"number\">1000</span></span><br><span class=\"line\">        <span class=\"string\">num</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"attr\">else:</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;现金不足&quot;)</span></span><br><span class=\"line\">        <span class=\"string\">print(f&quot;经过了&#123;num&#125;个路口,剩余的钱为&#123;money&#125;&quot;)</span></span><br><span class=\"line\">        <span class=\"string\">break</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "笔记",
                "python基础"
            ]
        },
        {
            "id": "http://example.com/2025/05/12/computer-science/python/han1/",
            "url": "http://example.com/2025/05/12/computer-science/python/han1/",
            "title": "变量",
            "date_published": "2025-05-11T16:00:00.000Z",
            "content_html": "<h1 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h1>\n<h2 id=\"为什么需要变量\"><a class=\"markdownIt-Anchor\" href=\"#为什么需要变量\">#</a> 为什么需要变量</h2>\n<p>1. 一个程序就是一个世界<br>\n 2. 变量是程序的基本组成单位<br>\n 3. 变量有三个基本要素（类型，名称，值）</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;a的值是&quot;,a,&quot;类型是&quot;,type(a))</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"变量的介绍\"><a class=\"markdownIt-Anchor\" href=\"#变量的介绍\">#</a> 变量的介绍</h2>\n<ul>\n<li>概念<br>\n变量相当于内存中一个数据存储空间的表示</li>\n<li>注意<br>\n先定义再使用</li>\n</ul>\n<h2 id=\"变量快速入门\"><a class=\"markdownIt-Anchor\" href=\"#变量快速入门\">#</a> 变量快速入门</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">&quot;tom&quot;</span>  <span class=\"comment\"># 字符串</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"number\">20</span>  <span class=\"comment\"># 整型</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"number\">33.3</span>  <span class=\"comment\"># 浮点型</span></span><br><span class=\"line\"><span class=\"string\">gender</span> <span class=\"string\">=</span> <span class=\"string\">&quot;男&quot;</span>  <span class=\"comment\"># 字符串</span></span><br><span class=\"line\"><span class=\"string\">print(name)</span></span><br><span class=\"line\"><span class=\"string\">print(age)</span></span><br><span class=\"line\"><span class=\"string\">print(score)</span></span><br><span class=\"line\"><span class=\"string\">print(gender)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">print(&quot;个人信息如下：&quot;,</span> <span class=\"string\">name,</span> <span class=\"string\">age,</span> <span class=\"string\">score,</span> <span class=\"string\">gender)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"格式化输出\"><a class=\"markdownIt-Anchor\" href=\"#格式化输出\">#</a> 格式化输出</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">&quot;tom&quot;</span>  <span class=\"comment\"># 字符串</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"number\">20</span>  <span class=\"comment\"># 整型</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"number\">33.3</span>  <span class=\"comment\"># 浮点型</span></span><br><span class=\"line\"><span class=\"string\">gender</span> <span class=\"string\">=</span> <span class=\"string\">&quot;男&quot;</span>  <span class=\"comment\"># 字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># %操作输出</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;个人信息如下：%s</span> <span class=\"string\">%d</span> <span class=\"string\">%.2f</span> <span class=\"string\">%s&quot;%(name,age,score,gender))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># format()函数</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;个人信息如下：&#123;&#125;</span> &#123;&#125; &#123;&#125; &#123;&#125;<span class=\"string\">&quot;.format(name,age,score,gender))</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># f-strings</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;</span><span class=\"string\">个人信息：&#123;name&#125;,&#123;age&#125;,&#123;score&#125;,&#123;gender&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"程序中号的使用\"><a class=\"markdownIt-Anchor\" href=\"#程序中号的使用\">#</a> 程序中 + 号的使用</h2>\n<p>左右两边是数值类型时，做加法运算<br>\n左右两边是字符串时，做拼接</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">&quot;king&quot;</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"number\">50.8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">print(score</span> <span class=\"string\">+</span> <span class=\"number\">20</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">print(name</span> <span class=\"string\">+</span> <span class=\"string\">&quot;hi&quot;</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;100&quot;</span> <span class=\"string\">+</span> <span class=\"string\">&quot;86&quot;</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型</h2>\n<p>基本数据类型：int float bool string<br>\na，b 是变量，没有类型</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```用type()查看数据类型</span></span><br><span class=\"line\"><span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">&quot;tom&quot;</span>  <span class=\"comment\"># 字符串</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"number\">20</span>  <span class=\"comment\"># 整型</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"number\">33.3</span>  <span class=\"comment\"># 浮点型</span></span><br><span class=\"line\"><span class=\"string\">gender</span> <span class=\"string\">=</span> <span class=\"string\">&quot;男&quot;</span>  <span class=\"comment\"># 字符串</span></span><br><span class=\"line\"><span class=\"comment\"># 查看变量指向的内容的类型</span></span><br><span class=\"line\"><span class=\"string\">print(type(name))</span></span><br><span class=\"line\"><span class=\"string\">print(type(age))</span></span><br><span class=\"line\"><span class=\"string\">print(type(score))</span></span><br><span class=\"line\"><span class=\"string\">print(type(gender))</span></span><br><span class=\"line\"><span class=\"string\">print(type(name))</span></span><br><span class=\"line\"><span class=\"string\">print(type(age))</span></span><br><span class=\"line\"><span class=\"string\">print(type(score))</span></span><br><span class=\"line\"><span class=\"string\">print(type(gender))</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;hello的类型是&#123;type(&quot;hello&quot;)&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"整数类型\"><a class=\"markdownIt-Anchor\" href=\"#整数类型\">#</a> 整数类型</h2>\n<ul>\n<li>细节<br>\n 1.int 可以表示很大的数<br>\n 2. 十六进制 0x 开头，八进制 0o 开头，二进制 0b 开头</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">print(10)</span></span><br><span class=\"line\"><span class=\"string\">print(0x10)</span></span><br><span class=\"line\"><span class=\"string\">print(0o10)</span></span><br><span class=\"line\"><span class=\"string\">print(0b10)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>一个字节占八位<br>\n int 占字节是一个变量，每一次增量是四个字节<br>\n可以通过 sys.getsizeof 查看变量的大小</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">sys</span></span><br><span class=\"line\"><span class=\"string\">s1</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"string\">s2</span> <span class=\"string\">=</span> <span class=\"number\">3</span> <span class=\"string\">**</span> <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"string\">s3</span> <span class=\"string\">=</span> <span class=\"number\">3</span> <span class=\"string\">**</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"string\">s4</span> <span class=\"string\">=</span> <span class=\"number\">3</span> <span class=\"string\">**</span> <span class=\"number\">111</span></span><br><span class=\"line\"><span class=\"string\">print(sys.getsizeof(s1))</span></span><br><span class=\"line\"><span class=\"string\">print(sys.getsizeof(s2))</span></span><br><span class=\"line\"><span class=\"string\">print(sys.getsizeof(s3))</span></span><br><span class=\"line\"><span class=\"string\">print(sys.getsizeof(s4))</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"浮点类型\"><a class=\"markdownIt-Anchor\" href=\"#浮点类型\">#</a> 浮点类型</h2>\n<h3 id=\"表现形式\"><a class=\"markdownIt-Anchor\" href=\"#表现形式\">#</a> 表现形式</h3>\n<p>1. 科学计数法 5.12e2<br>\n2. 十进制数的形式 0.512 .512<br>\n 浮点数计算后存在精度损失，可以使用 decimal 类进行精确计算</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">b</span> <span class=\"string\">=</span> <span class=\"number\">8.1</span> <span class=\"string\">/</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;b</span> <span class=\"string\">=</span> <span class=\"string\">&quot;, b)</span></span><br><span class=\"line\"><span class=\"string\">from decimal import Decimal</span></span><br><span class=\"line\"><span class=\"string\">b = Decimal(&quot;</span><span class=\"number\">8.1</span><span class=\"string\">&quot;) / Decimal(&quot;</span><span class=\"number\">3</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;</span><span class=\"string\">b</span> <span class=\"string\">=</span> <span class=\"string\">&quot;, b)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"布尔类型\"><a class=\"markdownIt-Anchor\" href=\"#布尔类型\">#</a> 布尔类型</h2>\n<ul>\n<li>基本使用</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">num1</span> <span class=\"string\">=</span> <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"string\">num2</span> <span class=\"string\">=</span> <span class=\"number\">200</span></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">num1</span> <span class=\"string\">&gt;</span> <span class=\"attr\">num2:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;num1</span> <span class=\"string\">&gt;</span> <span class=\"string\">num2&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">result</span> <span class=\"string\">=</span> <span class=\"string\">num1</span> <span class=\"string\">&gt;</span> <span class=\"string\">num2</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;result</span> <span class=\"string\">=</span> <span class=\"string\">&quot;, result)</span></span><br><span class=\"line\"><span class=\"string\">print(type(1 &gt; -1))</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>细节<br>\n 1. 布尔类型只有两个值：true 和 false<br>\n2. 布尔类型可以和其他数据类型进行比较，比如数字，字符串，在比较时，python 会将 true = 1，false = 0<br>\n3. 在 python 中，非 0 被视为真值，0 被视为假值</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">b1</span> <span class=\"string\">=</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"string\">b2</span> <span class=\"string\">=</span> <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;b1</span> <span class=\"string\">=</span> <span class=\"string\">&quot;, b1 + 10)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;</span><span class=\"string\">b2</span> <span class=\"string\">=</span> <span class=\"string\">&quot;, b2 + 10)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if b1 == 0:</span></span><br><span class=\"line\"><span class=\"string\">    print(&quot;</span><span class=\"string\">b1</span> <span class=\"string\">is</span> <span class=\"number\">0</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if b2 == 1:</span></span><br><span class=\"line\"><span class=\"string\">    print(&quot;</span><span class=\"string\">b2</span> <span class=\"string\">is</span> <span class=\"number\">1</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if 1:</span></span><br><span class=\"line\"><span class=\"string\">    print(&quot;</span><span class=\"string\">b1</span> <span class=\"string\">is</span> <span class=\"number\">1</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">if 0:</span></span><br><span class=\"line\"><span class=\"string\">    print(&quot;</span><span class=\"string\">b1</span> <span class=\"string\">is</span> <span class=\"number\">0</span><span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串类型\"><a class=\"markdownIt-Anchor\" href=\"#字符串类型\">#</a> 字符串类型</h2>\n<ul>\n<li>注意<br>\n 1.python 不支持单字符输出<br>\n 2. 用三个单引号 / 双引号是字符串保持原样使出<br>\n 3. 在字符串前加‘r’可以使整个字符串不会被转义</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">str1</span> <span class=\"string\">=</span> <span class=\"string\">&quot;tom说&#x27;你好&#x27;&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(str1)</span></span><br><span class=\"line\"><span class=\"comment\"># 通过+号连接字符串</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;hi&quot;</span> <span class=\"string\">+</span> <span class=\"string\">&quot;jjj&quot;</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">str3</span> <span class=\"string\">=</span> <span class=\"string\">&#x27;A&#x27;</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;str3类型是&quot;,type(str3))</span></span><br><span class=\"line\"><span class=\"string\">content</span> <span class=\"string\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;1.python不支持单字符输出</span></span><br><span class=\"line\"><span class=\"string\">             2.用三个单引号/双引号是字符串保持原样使出</span></span><br><span class=\"line\"><span class=\"string\">             3.在字符串前加‘r’可以使整个字符串不会被转义&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(content)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">str4</span> <span class=\"string\">=</span> <span class=\"string\">r&quot;jack\\lon\\mmm&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(str4)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"字符串驻留机制\"><a class=\"markdownIt-Anchor\" href=\"#字符串驻留机制\">#</a> 字符串驻留机制</h2>\n<p>python 仅保留一份相同且不可变字符串，不同的值被存放在字符串的驻留池当中，python 的驻留机制对相同的字符串只保留一份拷贝，后续创建相同字符串时，不会开辟新空间，而是把该字符串的地址赋给新常见的变量</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">str5</span> <span class=\"string\">=</span> <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"string\">str6</span> <span class=\"string\">=</span> <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"string\">str7</span> <span class=\"string\">=</span> <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(id(str5))</span></span><br><span class=\"line\"><span class=\"string\">print(id(str6))</span></span><br><span class=\"line\"><span class=\"string\">print(id(str7))</span></span><br><span class=\"line\"><span class=\"comment\"># 强制指向s1地址</span></span><br><span class=\"line\"><span class=\"string\">s1</span> <span class=\"string\">=</span> <span class=\"string\">&quot;abc#&quot;</span></span><br><span class=\"line\"><span class=\"string\">s2</span> <span class=\"string\">=</span> <span class=\"string\">sys.intern(s1)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>发生驻留机制条件<br>\n 1. 由大小写字母，0-9，_组成<br>\n 2. 长度为 0/1<br>\n3. 字符串在编译时进行驻留，而非运行时<br>\n 4.[-5 ,256] 的整数数字<br>\n但是 pytharm 对驻留机制进行了改进，提升效率，节约内存</li>\n</ul>\n<h2 id=\"数据类型转换\"><a class=\"markdownIt-Anchor\" href=\"#数据类型转换\">#</a> 数据类型转换</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">n1</span> <span class=\"string\">=</span> <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"string\">result</span> <span class=\"string\">=</span> <span class=\"string\">&quot;n1的值是：&quot;</span> <span class=\"string\">+</span> <span class=\"string\">n1</span></span><br><span class=\"line\"><span class=\"string\">print(result)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"隐式类型转换\"><a class=\"markdownIt-Anchor\" href=\"#隐式类型转换\">#</a> 隐式类型转换</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">var1</span> <span class=\"string\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"string\">print(type(var1))</span></span><br><span class=\"line\"><span class=\"string\">var2</span> <span class=\"string\">=</span> <span class=\"number\">1.1</span></span><br><span class=\"line\"><span class=\"string\">print(type(var2))</span></span><br><span class=\"line\"><span class=\"comment\"># 向高精度自动转换</span></span><br><span class=\"line\"><span class=\"string\">var3</span> <span class=\"string\">=</span> <span class=\"string\">var1</span> <span class=\"string\">+</span> <span class=\"string\">var2</span></span><br><span class=\"line\"><span class=\"string\">print(type(var3))</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显示类型转换\"><a class=\"markdownIt-Anchor\" href=\"#显示类型转换\">#</a> 显示类型转换</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">i</span> <span class=\"string\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"string\">j</span> <span class=\"string\">=</span> <span class=\"string\">float(i)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;j的类型是：&quot;,type(j),&quot;j</span> <span class=\"string\">=</span> <span class=\"string\">&quot;,j)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">k = str(i)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;</span><span class=\"string\">k的类型是：&quot;,type(k),&quot;k</span> <span class=\"string\">=</span> <span class=\"string\">&quot;,k)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>细节<br>\n 1. 不管什么值的 int，float 都可以变为 str<br>\n2.int 转成 float 时，增加小数部分；float 转成 int，去掉小数部分<br>\n 3.str 转成 int/float 使用 int (x)/float (x) (必须能直接转，12.3 的字符串不能直接转成 int)<br>\n 4. 强制转换后不会影响原数据的类型</li>\n<li>练习题<br>\n 1.int float float float 11.0 11 float</li>\n</ul>\n<h2 id=\"课后练习\"><a class=\"markdownIt-Anchor\" href=\"#课后练习\">#</a> 课后练习</h2>\n<p>1.n3 = 30 n5 = 8</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```使用str类型，分别保存\\n\\t\\r\\\\123等字符并打印输出</span></span><br><span class=\"line\"><span class=\"string\">str1</span> <span class=\"string\">=</span> <span class=\"string\">r&quot;\\n&quot;</span></span><br><span class=\"line\"><span class=\"string\">str2</span> <span class=\"string\">=</span> <span class=\"string\">r&quot;\\t&quot;</span></span><br><span class=\"line\"><span class=\"string\">str3</span> <span class=\"string\">=</span> <span class=\"string\">r&quot;\\r&quot;</span></span><br><span class=\"line\"><span class=\"string\">str4</span> <span class=\"string\">=</span> <span class=\"string\">r&quot;\\\\&quot;</span></span><br><span class=\"line\"><span class=\"string\">str5</span> <span class=\"string\">=</span> <span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\"><span class=\"string\">str6</span> <span class=\"string\">=</span> <span class=\"string\">&quot;2&quot;</span></span><br><span class=\"line\"><span class=\"string\">str7</span> <span class=\"string\">=</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;&#123;str1&#125;</span> &#123;<span class=\"string\">str2</span>&#125; &#123;<span class=\"string\">str3</span>&#125; &#123;<span class=\"string\">str4</span>&#125; &#123;<span class=\"string\">str5</span>&#125; &#123;<span class=\"string\">str6</span>&#125; &#123;<span class=\"string\">str7</span>&#125;<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```保存两本书名，用+拼接，看效果。保存两本是的价格，用+拼接看效果</span></span><br><span class=\"line\"><span class=\"string\">price1</span> <span class=\"string\">=</span> <span class=\"number\">22</span></span><br><span class=\"line\"><span class=\"string\">price2</span> <span class=\"string\">=</span> <span class=\"number\">33</span></span><br><span class=\"line\"><span class=\"string\">book1</span> <span class=\"string\">=</span> <span class=\"string\">&quot;西游记&quot;</span></span><br><span class=\"line\"><span class=\"string\">book2</span> <span class=\"string\">=</span> <span class=\"string\">&quot;水浒传&quot;</span></span><br><span class=\"line\"><span class=\"string\">book</span> <span class=\"string\">=</span> <span class=\"string\">book1</span> <span class=\"string\">+</span> <span class=\"string\">book2</span></span><br><span class=\"line\"><span class=\"string\">price</span> <span class=\"string\">=</span> <span class=\"string\">price1</span> <span class=\"string\">+</span> <span class=\"string\">price2</span></span><br><span class=\"line\"><span class=\"string\">print(book)</span></span><br><span class=\"line\"><span class=\"string\">print(price)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">&quot;Xylia&quot;</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"number\">22</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"string\">gender</span> <span class=\"string\">=</span> <span class=\"string\">&quot;女&quot;</span></span><br><span class=\"line\"><span class=\"string\">hobby</span> <span class=\"string\">=</span> <span class=\"string\">&quot;编程&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;姓名\\t\\t年龄\\t成绩\\t性别\\t爱好\\n&#123;name&#125;\\t&#123;age&#125;\\t&#123;score&#125;\\t&#123;gender&#125;\\t&#123;hobby&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔记",
                "python基础"
            ]
        },
        {
            "id": "http://example.com/2025/05/12/computer-science/python/han0/",
            "url": "http://example.com/2025/05/12/computer-science/python/han0/",
            "title": "python语言的概述",
            "date_published": "2025-05-11T16:00:00.000Z",
            "content_html": "<h1 id=\"课程信息\"><a class=\"markdownIt-Anchor\" href=\"#课程信息\">#</a> 课程信息</h1>\n<ul>\n<li>课程</li>\n</ul>\n<div class=\"links\"><div class=\"item\" title=\"韩顺平\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXpONHkxdjdWdi8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smdmRfc291cmNlPTIxYTg4NDRlZGE0MTE4N2M2ZTIxYzhmYTdjNTNiZThl\" data-background-image=\"https://www.bilibili.com/favicon.ico\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXpONHkxdjdWdi8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smdmRfc291cmNlPTIxYTg4NDRlZGE0MTE4N2M2ZTIxYzhmYTdjNTNiZThl\">零基础 快速学python</span>\n          <p class=\"desc\">适合python零基础 python初学入学</p>\n          </div></div></div>\n<h1 id=\"python语言的概述\"><a class=\"markdownIt-Anchor\" href=\"#python语言的概述\">#</a> python 语言的概述</h1>\n<h2 id=\"程序的概念\"><a class=\"markdownIt-Anchor\" href=\"#程序的概念\">#</a> 程序的概念</h2>\n<p>计算机执行某些操作或者解决某个问题而编写的一系列有序指令的集合</p>\n<h2 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h2>\n<p>简单易学，面向对象，开源，可移植性，解释性语言，高级语言，可扩展性，丰富的库，规范的代码</p>\n<h2 id=\"python快速入门\"><a class=\"markdownIt-Anchor\" href=\"#python快速入门\">#</a> python 快速入门</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;hello</span> <span class=\"string\">world&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzEueG4tLXB5dGhvbi1naTZqMjcwZTh2cHIwMGM1bmwucHk=\">1.python 程序后缀是.py</span><br>\n2.print 表示输出 (&quot;&quot;) 中的内容<br>\n 3.# 表示注释内容</p>\n<h3 id=\"python运行原理\"><a class=\"markdownIt-Anchor\" href=\"#python运行原理\">#</a> Python 运行原理</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMjA5MzYwMi5wbmc=\">运行原理</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">print(&quot;Xylia is studying python!&quot;)</span><br><span class=\"line\">```</span><br></pre></td></tr></table></figure>\n<h3 id=\"python程序开发注意事项\"><a class=\"markdownIt-Anchor\" href=\"#python程序开发注意事项\">#</a> python 程序开发注意事项</h3>\n<p>1.python 源文件通常以.py 为后缀，但不必须<br>\n 2. 默认情况顺序执行<br>\n 3.python 区分大小写<br>\n 4.python 语句不需要；结束，规范是不写</p>\n<h3 id=\"python常用快捷键\"><a class=\"markdownIt-Anchor\" href=\"#python常用快捷键\">#</a> python 常用快捷键</h3>\n<p>shift + delete 删除当前行<br>\n ctrl + d 复制当前行<br>\n ctrl + / 注释选中行<br>\n ctrl + alt + L 快速代码格式化<br>\n ctrl + h 查看层级关系<br>\n ctrl + r 运行<br>\n ctrl + f 查找</p>\n<h2 id=\"转义字符\"><a class=\"markdownIt-Anchor\" href=\"#转义字符\">#</a> 转义字符</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"comment\">#制表符</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;hello</span> <span class=\"string\">\\t</span> <span class=\"string\">world&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">#换行符</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;hello</span> <span class=\"string\">python</span> <span class=\"string\">\\nhello</span> <span class=\"string\">world&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"># 输出一个\\</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;D:\\\\python\\\\chapter02&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;韩顺平说\\&quot;输出双引号\\&quot;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;韩顺平说\\&#x27;输出单引号\\&#x27;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;韩顺平说\\r输出后半句话,用后半句话覆盖前半句话&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```练习</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;姓名\\t\\t年龄\\t\\t籍贯\\t\\t住址\\njohn\\t12\\t\\t河北\\t\\t北京&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"注释comment\"><a class=\"markdownIt-Anchor\" href=\"#注释comment\">#</a> 注释 comment</h2>\n<p>1. 单行注释用#<br>\n2. 多行注释用 &quot;&quot;&quot;/’’’<br>\n3. 在开头指定编码格式 #coding: 编码（新版没有用）</p>\n<h2 id=\"规范和文档\"><a class=\"markdownIt-Anchor\" href=\"#规范和文档\">#</a> 规范和文档</h2>\n<p>1.tab 键向右移动，shift+tab 整体向右移动<br>\n 2.= 两边用空格<br>\n 3. 变量用，隔开</p>\n<div class=\"links\"><div class=\"item\" title=\"python\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvemgtY24vMy4xMi8=\" data-background-image=\"https://images.sj33.cn/uploads/202005/7-200525101140K8.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvemgtY24vMy4xMi8=\">python官方文档</span>\n          <p class=\"desc\">https://docs.python.org/zh-cn/3.12/</p>\n          </div></div></div>\n<h1 id=\"课后练习题\"><a class=\"markdownIt-Anchor\" href=\"#课后练习题\">#</a> 课后练习题</h1>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```个人信息</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;姓名\\t\\t性别\\t籍贯\\t住址\\nXylia\\t女\\t山西\\t北京&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;</span>  <span class=\"string\">*</span>                    <span class=\"string\">*</span>  <span class=\"string\">\\n&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;*    * I Love Python *    *\\n&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;   *                   *\\n&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;      *             *\\n&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;         *        *\\n&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;            *   *\\n&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;              *\\n&quot;</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>3. 环境变量 path 的步骤<br>\n此电脑 - 属性 - 高级系统设置 - 环境变量<br>\n配置环境变量后，可以在任意目录执行 path 目录下的程序或者指令<br>\n 4.python 编写代码规范<br>\n 1. 正确使用注释<br>\n 2. 正确使用缩进<br>\n 3.= 两边用空格<br>\n 4. 变量用，隔开</p>\n",
            "tags": [
                "笔记",
                "python基础"
            ]
        },
        {
            "id": "http://example.com/2025/05/12/computer-science/python/han2/",
            "url": "http://example.com/2025/05/12/computer-science/python/han2/",
            "title": "运算符",
            "date_published": "2025-05-11T16:00:00.000Z",
            "content_html": "<h1 id=\"运算符的介绍\"><a class=\"markdownIt-Anchor\" href=\"#运算符的介绍\">#</a> 运算符的介绍</h1>\n<h2 id=\"算术运算符\"><a class=\"markdownIt-Anchor\" href=\"#算术运算符\">#</a> 算术运算符</h2>\n<p>±*/%<br>\n// 取整除 返回商的整数部分（向下取整）<br>\n** 返回 x 的 y 次幂</p>\n<ul>\n<li>练习</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">day = 剩余天数</span></span><br><span class=\"line\"><span class=\"string\">date = 总天数</span></span><br><span class=\"line\"><span class=\"string\">week = 星期数</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">data</span> <span class=\"string\">=</span> <span class=\"number\">97</span></span><br><span class=\"line\"><span class=\"string\">week</span> <span class=\"string\">=</span> <span class=\"string\">data</span> <span class=\"string\">//</span> <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"string\">day</span> <span class=\"string\">=</span> <span class=\"string\">data</span> <span class=\"string\">%</span> <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;合&#123;week&#125;星期零&#123;day&#125;天&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">fahrenheit = 华氏温度</span></span><br><span class=\"line\"><span class=\"string\">centigrade = 摄氏温度</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">fahrenheit</span> <span class=\"string\">=</span> <span class=\"number\">234.5</span></span><br><span class=\"line\"><span class=\"string\">centigrade</span> <span class=\"string\">=</span> <span class=\"number\">5</span> <span class=\"string\">/</span> <span class=\"number\">9</span> <span class=\"string\">*</span> <span class=\"string\">(fahrenheit</span> <span class=\"bullet\">-</span> <span class=\"number\">100</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;&#123;fahrenheit&#125;对应的摄氏温度为&#123;centigrade&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"比较运算符\"><a class=\"markdownIt-Anchor\" href=\"#比较运算符\">#</a> 比较运算符</h2>\n<p>== != &lt;&gt; &lt;=&gt;= is  is not (判断字符空间)</p>\n<ul>\n<li>细节<br>\n比较运算符的结果时 True/False</li>\n</ul>\n<h2 id=\"逻辑布尔运算符\"><a class=\"markdownIt-Anchor\" href=\"#逻辑布尔运算符\">#</a> 逻辑 / 布尔运算符</h2>\n<p>and x= false 返回 x，否则为 y     短路操作<br>\n or  x = True 返回 x，否则为 y<br>\nnot x = True 返回 False，x = False 返回 True</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"number\">70</span></span><br><span class=\"line\"><span class=\"string\">print(score</span> <span class=\"string\">&gt;=</span> <span class=\"number\">60</span> <span class=\"string\">and</span> <span class=\"string\">score</span> <span class=\"string\">&lt;=</span> <span class=\"number\">80</span><span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">if</span> <span class=\"string\">score</span> <span class=\"string\">&gt;=</span> <span class=\"number\">60</span> <span class=\"string\">and</span> <span class=\"string\">score</span> <span class=\"string\">&lt;=</span> <span class=\"attr\">80:</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;成绩还不错&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算符\">#</a> 赋值运算符</h2>\n<p>= += -= *= /= %= **= //=</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;将a和b的值进行交换&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"string\">b</span> <span class=\"string\">=</span> <span class=\"number\">40</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;交换前a=&#123;a&#125;b=&#123;b&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">c</span> <span class=\"string\">=</span> <span class=\"string\">a</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"string\">b</span></span><br><span class=\"line\"><span class=\"string\">b</span> <span class=\"string\">=</span> <span class=\"string\">c</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;交换后a=&#123;a&#125;b=&#123;b&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;将d和e的值进行交换&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">d</span> <span class=\"string\">=</span> <span class=\"number\">22</span></span><br><span class=\"line\"><span class=\"string\">e</span> <span class=\"string\">=</span> <span class=\"number\">33</span></span><br><span class=\"line\"><span class=\"string\">d,e</span> <span class=\"string\">=</span> <span class=\"string\">e,d</span></span><br><span class=\"line\"><span class=\"string\">print(d,e)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;思考&quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"string\">a</span> <span class=\"string\">+</span> <span class=\"string\">b</span></span><br><span class=\"line\"><span class=\"string\">b</span> <span class=\"string\">=</span> <span class=\"string\">a</span> <span class=\"bullet\">-</span> <span class=\"string\">b</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"string\">a</span> <span class=\"bullet\">-</span> <span class=\"string\">b</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;交换后a=&#123;a&#125;b=&#123;b&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>特点<br>\n运算顺序从右向左</li>\n</ul>\n<h2 id=\"三元运算符\"><a class=\"markdownIt-Anchor\" href=\"#三元运算符\">#</a> 三元运算符</h2>\n<p>if else<br>\nmax = a if a &gt; b else b</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"string\">b</span> <span class=\"string\">=</span> <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"string\">c</span> <span class=\"string\">=</span> <span class=\"number\">30</span></span><br><span class=\"line\"><span class=\"string\">max</span> <span class=\"string\">=</span> <span class=\"string\">(a</span> <span class=\"string\">if</span> <span class=\"string\">a</span> <span class=\"string\">&gt;</span> <span class=\"string\">b</span> <span class=\"string\">else</span> <span class=\"string\">b)</span> <span class=\"string\">if</span> <span class=\"string\">(a</span> <span class=\"string\">if</span> <span class=\"string\">a</span> <span class=\"string\">&gt;</span> <span class=\"string\">b</span> <span class=\"string\">else</span> <span class=\"string\">b)</span> <span class=\"string\">&gt;</span> <span class=\"string\">c</span> <span class=\"string\">else</span> <span class=\"string\">c</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;最大值是&#123;max&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"运算符优先级\"><a class=\"markdownIt-Anchor\" href=\"#运算符优先级\">#</a> 运算符优先级</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMjIwNDQxOS5wbmc=\"></span></p>\n<h1 id=\"标志符的命名规则和规范\"><a class=\"markdownIt-Anchor\" href=\"#标志符的命名规则和规范\">#</a> 标志符的命名规则和规范</h1>\n<p>凡是可以自己取名字的地方都叫标识符</p>\n<ul>\n<li>规则<br>\n 1.26 个英文字母大小写，0-9，_组成<br>\n 2. 数字不可以开头<br>\n 3. 不可以使用关键字，但能包含关键字<br>\n 4. 不可以包含空格<br>\n 5. 区分大小写<br>\n int 不是关键字</li>\n<li>规范<br>\n 1. 变量要小写，多个单词用下划线分开，常量全部大写<br>\n 2. 函数名要小写，多个单词用下划线分开，私有函数以下划线开头<br>\n 3. 类名使用大驼峰命名</li>\n</ul>\n<h1 id=\"关键字\"><a class=\"markdownIt-Anchor\" href=\"#关键字\">#</a> 关键字</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pYS1YeWxpYS9NaWEtWHlsaWEtcGljdHVyZXNAbWFzdGVyL2ltZy8yMDI1MDUxMjIwNTQ0OS5wbmc=\"></span></p>\n<h1 id=\"键盘输入语句\"><a class=\"markdownIt-Anchor\" href=\"#键盘输入语句\">#</a> 键盘输入语句</h1>\n<p>input()</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">name</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入姓名&quot;)</span></span><br><span class=\"line\"><span class=\"string\">age</span> <span class=\"string\">=</span> <span class=\"string\">int(input(&quot;请输入年龄&quot;))</span></span><br><span class=\"line\"><span class=\"string\">score</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入成绩&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">print(&quot;输入的信息如下：&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;name</span> <span class=\"string\">=</span> &#123;<span class=\"string\">name</span>&#125;<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;</span><span class=\"string\">age</span> <span class=\"string\">=</span> &#123;<span class=\"string\">age</span>&#125;<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;</span><span class=\"string\">score</span> <span class=\"string\">=</span> &#123;<span class=\"string\">score</span>&#125;<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>input 接收的所有数据类型为 str</p>\n<h1 id=\"进制\"><a class=\"markdownIt-Anchor\" href=\"#进制\">#</a> 进制</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taWEteHlsaWEuZ2l0aHViLmlvLzIwMjUvMDMvMzAvY29tcHV0ZXItc2NpZW5jZS9qYXZhLyVFNSU5RiVCQSVFNyVBMSU4MDMv\"></span></p>\n",
            "tags": [
                "笔记",
                "python基础"
            ]
        },
        {
            "id": "http://example.com/2025/03/26/computer-science/python/pytorch2/",
            "url": "http://example.com/2025/03/26/computer-science/python/pytorch2/",
            "title": "笔记：PyTorch(2)",
            "date_published": "2025-03-25T16:00:00.000Z",
            "content_html": "<h1 id=\"神经网络\"><a class=\"markdownIt-Anchor\" href=\"#神经网络\">#</a> 神经网络</h1>\n<h2 id=\"神经网络的基本骨架-nnmodule\"><a class=\"markdownIt-Anchor\" href=\"#神经网络的基本骨架-nnmodule\">#</a> 神经网络的基本骨架  nn.Module</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">sympy</span> <span class=\"string\">import</span> <span class=\"string\">xring</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super().__init__()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">input):</span></span><br><span class=\"line\">        <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">input+1</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">output</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span>  <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor(1.0)</span></span><br><span class=\"line\"><span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">xylia(x)</span></span><br><span class=\"line\"><span class=\"string\">print(output)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"卷积层-convolution-layers\"><a class=\"markdownIt-Anchor\" href=\"#卷积层-convolution-layers\">#</a> 卷积层  Convolution Layers</h2>\n<ul>\n<li>nn.Conv2d<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZkdW1vdWxpbi9jb252X2FyaXRobWV0aWMvYmxvYi9tYXN0ZXIvUkVBRE1FLm1k\">link</span></li>\n</ul>\n<details class=\"success\"><summary>部分官方文档</summary><div>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">torch.nn.Conv2d(in_channels, out_channels, kernel_size, stride=1, padding=0, dilation=1, groups=1, bias=True, padding_mode=&#x27;zeros&#x27;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">in_channels (int) – Number of channels in the input image</span><br><span class=\"line\"></span><br><span class=\"line\">out_channels (int) – Number of channels produced by the convolution</span><br><span class=\"line\"></span><br><span class=\"line\">kernel_size (int or tuple) – Size of the convolving kernel</span><br><span class=\"line\"></span><br><span class=\"line\">stride (int or tuple, optional) – Stride of the convolution. Default: 1</span><br><span class=\"line\"></span><br><span class=\"line\">padding (int or tuple, optional) – Zero-padding added to both sides of the input. Default: 0</span><br><span class=\"line\"></span><br><span class=\"line\">padding_mode (string, optional) – &#x27;zeros&#x27;, &#x27;reflect&#x27;, &#x27;replicate&#x27; or &#x27;circular&#x27;. Default: &#x27;zeros&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">dilation (int or tuple, optional) – Spacing between kernel elements. Default: 1</span><br><span class=\"line\"></span><br><span class=\"line\">groups (int, optional) – Number of blocked connections from input channels to output channels. Default: 1</span><br><span class=\"line\"></span><br><span class=\"line\">bias (bool, optional) – If True, adds a learnable bias to the output. Default: True</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details>\n<p>Out_channel = 2 生成两个卷积核</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">nn_module</span> <span class=\"string\">import</span> <span class=\"string\">output</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">test_tb</span> <span class=\"string\">import</span> <span class=\"string\">writer</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,train=False,transform=torchvision.transforms.ToTensor(),</span></span><br><span class=\"line\">                                       <span class=\"string\">download=True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset,batch_size</span> <span class=\"string\">=</span> <span class=\"number\">64</span><span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.conv1</span> <span class=\"string\">=</span> <span class=\"string\">nn.Conv2d(in_channels=3,</span> <span class=\"string\">out_channels=6,</span> <span class=\"string\">kernel_size=3,stride=1,padding=0)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.conv1(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"comment\"># print(xylia)</span></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;./log&quot;)</span></span><br><span class=\"line\"><span class=\"string\">step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">for data in dataloader:</span></span><br><span class=\"line\">    <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">    <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">    <span class=\"string\">print(imgs.shape)</span></span><br><span class=\"line\">    <span class=\"string\">print(output.shape)</span></span><br><span class=\"line\">    <span class=\"comment\"># torch.Size([64, 3, 32, 32])</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_images(&quot;input&quot;,imgs,step)</span></span><br><span class=\"line\">    <span class=\"comment\"># torch.Size([64, 6, 30, 30])</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(output,(-1,3,30,30))</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_images(&quot;output&quot;,output,step)</span></span><br><span class=\"line\">    <span class=\"string\">step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"池化层-pooling-layers\"><a class=\"markdownIt-Anchor\" href=\"#池化层-pooling-layers\">#</a> 池化层  Pooling layers</h2>\n<ul>\n<li>nn.MaxPool2d</li>\n</ul>\n<details class=\"success\"><summary>部分官方文档</summary><div>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kernel_size – the size of the window to take a max over</span><br><span class=\"line\"></span><br><span class=\"line\">stride – the stride of the window. Default value is kernel_size</span><br><span class=\"line\"></span><br><span class=\"line\">padding – implicit zero padding to be added on both sides</span><br><span class=\"line\"></span><br><span class=\"line\">dilation – a parameter that controls the stride of elements in the window</span><br><span class=\"line\"></span><br><span class=\"line\">return_indices – if True, will return the max indices along with the outputs. Useful for torch.nn.MaxUnpool2d later</span><br><span class=\"line\"></span><br><span class=\"line\">ceil_mode – when True, will use ceil instead of floor to compute the output shape</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details>\n<p>dilation 空洞卷积，卷积核每两个数空一格<br>\n kernel_size = 3<br>\n 输入图像：5×5<br>\n 池化核 3×3<br>\nCeil_model = True   进行保留</p>\n<p>最大池化的作用：保留数据特征，数据量减少</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=True,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                       <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"><span class=\"comment\"># # 输入数据</span></span><br><span class=\"line\"><span class=\"comment\"># input = torch.tensor([[1,2,0,3,1],</span></span><br><span class=\"line\"><span class=\"comment\">#                       [0,1,2,3,1],</span></span><br><span class=\"line\"><span class=\"comment\">#                       [1,2,1,0,0],</span></span><br><span class=\"line\"><span class=\"comment\">#                       [5,2,3,1,1],</span></span><br><span class=\"line\"><span class=\"comment\">#                       [2,1,0,1,1]],dtype=torch.float32)# 二维矩阵</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># input = torch.reshape(input,(-1,1,5,5))</span></span><br><span class=\"line\"><span class=\"comment\"># print(input.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.maxpool1</span> <span class=\"string\">=</span> <span class=\"string\">nn.MaxPool2d(kernel_size=3,</span> <span class=\"string\">ceil_mode=False)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">input):</span></span><br><span class=\"line\">        <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">self.maxpool1(input)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">output</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"comment\"># output = xylia(input)</span></span><br><span class=\"line\"><span class=\"comment\"># print(output)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;./logs_maxpoll&quot;)</span></span><br><span class=\"line\"><span class=\"string\">step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">for data in dataloader:</span></span><br><span class=\"line\">    <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_images(&quot;input&quot;,</span> <span class=\"string\">imgs,</span> <span class=\"string\">step)</span></span><br><span class=\"line\">    <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_images(&quot;output&quot;,</span> <span class=\"string\">output,</span> <span class=\"string\">step)</span></span><br><span class=\"line\">    <span class=\"string\">step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"padding-layers\"><a class=\"markdownIt-Anchor\" href=\"#padding-layers\">#</a> Padding Layers</h2>\n<ul>\n<li>nn.ZeroPad2d<br>\n 用 0 填充</li>\n<li>nn.ConstatPad2d<br>\n 用常数填充</li>\n</ul>\n<h2 id=\"非线性激活-no-linear-activations\"><a class=\"markdownIt-Anchor\" href=\"#非线性激活-no-linear-activations\">#</a> 非线性激活  No-linear Activations</h2>\n<ul>\n<li>nn.Relu  截断<br>\n input&gt;0 output = input<br>\ninput&lt;0 output = 0</li>\n</ul>\n<details class=\"success\"><summary>inplace</summary><div>\n<p>input = -1<br>\nPelu(input,inplace = True)<br>\ninput =0</p>\n<p>input = -1<br>\nPelu(input,inplace = False)<br>\ninput =-1<br>\noutput = 0</p>\n</div></details>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span>  <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([[1,-0.5],</span></span><br><span class=\"line\">                     [<span class=\"number\">-1</span>,<span class=\"number\">3</span>]<span class=\"string\">])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(input,(-1,1,2,2))</span></span><br><span class=\"line\"><span class=\"string\">print(input.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.relu1</span> <span class=\"string\">=</span> <span class=\"string\">nn.ReLU()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">input):</span></span><br><span class=\"line\">        <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">self.relu1(input)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">output</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">xylia(input)</span></span><br><span class=\"line\"><span class=\"string\">print(output)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>nn.Sigmoid</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span>  <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">nn_conv2</span> <span class=\"string\">import</span> <span class=\"string\">dataloader</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([[1,-0.5],</span></span><br><span class=\"line\">                     [<span class=\"number\">-1</span>,<span class=\"number\">3</span>]<span class=\"string\">])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(input,(-1,1,2,2))</span></span><br><span class=\"line\"><span class=\"string\">print(input.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=True,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                       <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset,batch_size=64)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.relu1</span> <span class=\"string\">=</span> <span class=\"string\">nn.ReLU()</span></span><br><span class=\"line\">        <span class=\"string\">self.sigmoid1</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sigmoid()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">input):</span></span><br><span class=\"line\">        <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">self.sigmoid1(input)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">output</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"comment\"># output = xylia(input)</span></span><br><span class=\"line\"><span class=\"comment\"># print(output)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;./logs_sigmoid1&quot;)</span></span><br><span class=\"line\"><span class=\"string\">step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">for data in dataloader:</span></span><br><span class=\"line\">    <span class=\"string\">imgs,</span> <span class=\"string\">targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_images(&quot;input&quot;,</span> <span class=\"string\">imgs,</span> <span class=\"string\">global_step=step)</span></span><br><span class=\"line\">    <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_images(&quot;output&quot;,</span> <span class=\"string\">outputs,</span> <span class=\"string\">global_step=step)</span></span><br><span class=\"line\">    <span class=\"string\">step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"线性层及其他层介绍\"><a class=\"markdownIt-Anchor\" href=\"#线性层及其他层介绍\">#</a> 线性层及其他层介绍</h2>\n<ul>\n<li>Normalization Layer</li>\n<li>Recurrent Layers</li>\n<li>Transformer Layers</li>\n<li>Dropout Layers<br>\nnn.Dropout 防止过拟合</li>\n<li>Sparse Layers<br>\nnn.Embedding 自然语言</li>\n<li>Distance Functions</li>\n<li>Loss Functions</li>\n<li>Sequential</li>\n</ul>\n<h3 id=\"linaear-layers\"><a class=\"markdownIt-Anchor\" href=\"#linaear-layers\">#</a> Linaear Layers</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=False,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                       <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#数据集batch之后生下了16张图片，舍弃最后不满足的drop_last=True</span></span><br><span class=\"line\"><span class=\"string\">dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset,</span> <span class=\"string\">batch_size=64,drop_last=True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.Linear1</span> <span class=\"string\">=</span> <span class=\"string\">nn.Linear(196608,10)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,input):</span></span><br><span class=\"line\">        <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">self.Linear1(input)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">output</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">for data in dataloader:</span></span><br><span class=\"line\">    <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">    <span class=\"string\">print(imgs.shape)</span></span><br><span class=\"line\">    <span class=\"comment\"># output = torch.reshape(imgs,(1,1,1,-1))</span></span><br><span class=\"line\">    <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">torch.flatten(imgs)</span></span><br><span class=\"line\">    <span class=\"string\">print(output.shape)</span></span><br><span class=\"line\">    <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">xylia(output)</span></span><br><span class=\"line\">    <span class=\"string\">print(output.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"搭建小实战和sequential的使用\"><a class=\"markdownIt-Anchor\" href=\"#搭建小实战和sequential的使用\">#</a> 搭建小实战和 Sequential 的使用</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.nn</span> <span class=\"string\">import</span> <span class=\"string\">Conv2d,MaxPool2d,Flatten,Linear</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.conv1</span> <span class=\"string\">=</span> <span class=\"string\">Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2,stride=1)</span></span><br><span class=\"line\">        <span class=\"string\">self.maxpool1</span> <span class=\"string\">=</span> <span class=\"string\">MaxPool2d(2)</span></span><br><span class=\"line\">        <span class=\"string\">self.conv2</span> <span class=\"string\">=</span> <span class=\"string\">Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2,stride=1)</span></span><br><span class=\"line\">        <span class=\"string\">self.maxpool2</span> <span class=\"string\">=</span> <span class=\"string\">MaxPool2d(2)</span></span><br><span class=\"line\">        <span class=\"string\">self.conv3</span> <span class=\"string\">=</span> <span class=\"string\">Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2,stride=1)</span></span><br><span class=\"line\">        <span class=\"string\">self.maxpool3</span> <span class=\"string\">=</span> <span class=\"string\">MaxPool2d(2)</span></span><br><span class=\"line\">        <span class=\"string\">self.flatten</span> <span class=\"string\">=</span> <span class=\"string\">Flatten()</span></span><br><span class=\"line\">        <span class=\"string\">self.linear</span> <span class=\"string\">=</span> <span class=\"string\">Linear(1024,</span> <span class=\"number\">64</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">self.linear2</span> <span class=\"string\">=</span> <span class=\"string\">Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.conv1(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.maxpool1(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.conv2(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.maxpool2(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.conv3(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.maxpool3(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.flatten(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.linear(x)</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.linear2(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"string\">print(xylia)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>检验是否正确</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.ones((64,3,32,32))</span></span><br><span class=\"line\"><span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">xylia(input)</span></span><br><span class=\"line\"><span class=\"string\">print(output.shape)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Sequential 的作用</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">self.model</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2,stride=1),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2,stride=1),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2,stride=1),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">Linear(1024,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.model(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>writer 方式</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;./logs_seq&quot;)</span></span><br><span class=\"line\"><span class=\"string\">writer.add_graph(xylia,</span> <span class=\"string\">input)</span></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"土堆说卷积操作选看\"><a class=\"markdownIt-Anchor\" href=\"#土堆说卷积操作选看\">#</a> 土堆说卷积操作 (选看)</h1>\n<ul>\n<li>conv2D<br>\nstride = 1 时走一步</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch.nn.functional</span> <span class=\"string\">as</span> <span class=\"string\">F</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入数据</span></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([[1,2,0,3,1],</span></span><br><span class=\"line\">                      [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>]<span class=\"string\">,</span></span><br><span class=\"line\">                      [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]<span class=\"string\">,</span></span><br><span class=\"line\">                      [<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]<span class=\"string\">,</span></span><br><span class=\"line\">                      [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>]<span class=\"string\">])#</span> <span class=\"string\">二维矩阵</span></span><br><span class=\"line\"><span class=\"comment\"># 卷积核</span></span><br><span class=\"line\"><span class=\"string\">kernel</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([[1,2,1],</span></span><br><span class=\"line\">                       [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]<span class=\"string\">,</span></span><br><span class=\"line\">                       [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]<span class=\"string\">])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 尺寸变换</span></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(input,(1,1,5,5))</span></span><br><span class=\"line\"><span class=\"string\">kernel</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(kernel,(1,1,3,3))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(input.shape)</span></span><br><span class=\"line\"><span class=\"comment\"># print(kernel.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">F.conv2d(input,kernel,stride=1)</span></span><br><span class=\"line\"><span class=\"string\">print(output)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">output2</span> <span class=\"string\">=</span> <span class=\"string\">F.conv2d(input,kernel,stride=2)</span></span><br><span class=\"line\"><span class=\"string\">print(output2)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>padding<br>\npadding = 1, 向外拓展一行 / 列</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">output3</span> <span class=\"string\">=</span> <span class=\"string\">F.conv2d(input,kernel,stride=1,padding=1)</span></span><br><span class=\"line\"><span class=\"string\">print(output3)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔记",
                "pytorch基础"
            ]
        },
        {
            "id": "http://example.com/2025/03/26/computer-science/python/pytorch3/",
            "url": "http://example.com/2025/03/26/computer-science/python/pytorch3/",
            "title": "笔记：PyTorch(3)",
            "date_published": "2025-03-25T16:00:00.000Z",
            "content_html": "<h1 id=\"loss-functions\"><a class=\"markdownIt-Anchor\" href=\"#loss-functions\">#</a> Loss Functions</h1>\n<ul>\n<li>\n<p>Loss<br>\ntarget = 1,2,5<br>\noutput = 1,2,3<br>\nLoss = target - output<br>\n1. 计算实际输出和目标之间的差距<br>\n 2. 为我们更新输出提供一定的依据（反向传播）</p>\n</li>\n<li>\n<p>L1loss<br>\nL1loss = (0+0+2^2)/3</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span> <span class=\"string\">L1loss</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.nn</span> <span class=\"string\">import</span> <span class=\"string\">L1Loss</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([1,2,3],dtype=torch.float32)</span></span><br><span class=\"line\"><span class=\"string\">target</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([1,2,5])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">input</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(input,</span> <span class=\"string\">(1,1,1,3))</span></span><br><span class=\"line\"><span class=\"string\">target</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(target,</span> <span class=\"string\">(1,1,1,3))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">L1Loss(reduction=&#x27;sum&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">result</span> <span class=\"string\">=</span> <span class=\"string\">loss(input,</span> <span class=\"string\">target)</span></span><br><span class=\"line\"><span class=\"string\">print(result)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>MSELoss<br>\nMSELoss = (0+0+2)/3</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span> <span class=\"string\">mes</span></span><br><span class=\"line\"><span class=\"string\">loss_mae</span> <span class=\"string\">=</span> <span class=\"string\">nn.MSELoss()</span></span><br><span class=\"line\"><span class=\"string\">result_mse</span> <span class=\"string\">=</span> <span class=\"string\">loss_mae(input,</span> <span class=\"string\">target)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">print(result_mse)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>CrossEntropyLoss</li>\n</ul>\n<p>person,dog,cat[0,1,2]<br>\ninput = img[dog]<br>\nnn :<br>\noutput = [0.1,0.2,0.3]      x<br>\ntarget = [1]    class<br>\nloss(x,class) = -0.2 +ln(exp(0.1)+exp(0.2),exp(0.3))</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span>  <span class=\"string\">验证</span></span><br><span class=\"line\"><span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([0.1,0.2,0.3])</span></span><br><span class=\"line\"><span class=\"string\">y</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([1])</span></span><br><span class=\"line\"><span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(x,</span> <span class=\"string\">(1,3))</span></span><br><span class=\"line\"><span class=\"string\">loss_cross</span> <span class=\"string\">=</span> <span class=\"string\">nn.CrossEntropyLoss()</span></span><br><span class=\"line\"><span class=\"string\">result_cross</span> <span class=\"string\">=</span> <span class=\"string\">loss_cross(x,y)</span></span><br><span class=\"line\"><span class=\"string\">print(result_cross)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span> <span class=\"string\">CrossEntropyLoss+网络</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.nn</span> <span class=\"string\">import</span> <span class=\"string\">Conv2d,MaxPool2d,Flatten,Linear</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=False,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                       <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset,</span> <span class=\"string\">batch_size=1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.model</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">Linear(1024,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.model(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">nn.CrossEntropyLoss()</span></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"attr\">for data in dataloader:</span></span><br><span class=\"line\">    <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">    <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(outputs)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(targets)</span></span><br><span class=\"line\">    <span class=\"string\">cross_loss</span> <span class=\"string\">=</span> <span class=\"string\">loss(outputs,targets)</span></span><br><span class=\"line\">    <span class=\"string\">print(cross_loss)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"优化器\"><a class=\"markdownIt-Anchor\" href=\"#优化器\">#</a> 优化器</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy9kb2NzLzEuOC4xL29wdGltLmh0bWw=\">torch.optim</span><br>\nLr = learning rate</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.nn</span> <span class=\"string\">import</span> <span class=\"string\">Conv2d,MaxPool2d,Flatten,Linear</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=False,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                       <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset,</span> <span class=\"string\">batch_size=1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.model</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">MaxPool2d(2),</span></span><br><span class=\"line\">            <span class=\"string\">Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">Linear(1024,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.model(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">nn.CrossEntropyLoss()</span></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\"><span class=\"string\">optimizer</span> <span class=\"string\">=</span> <span class=\"string\">torch.optim.SGD(xylia.parameters(),</span> <span class=\"string\">lr=0.01)</span></span><br><span class=\"line\"><span class=\"comment\"># 运行20轮</span></span><br><span class=\"line\"><span class=\"attr\">for epoch in range(20):</span></span><br><span class=\"line\">    <span class=\"string\">runing_loss</span> <span class=\"string\">=</span> <span class=\"number\">0.0</span></span><br><span class=\"line\">    <span class=\"attr\">for data in dataloader:</span></span><br><span class=\"line\">        <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">        <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">        <span class=\"string\">result_loss</span> <span class=\"string\">=</span> <span class=\"string\">loss(outputs,targets)</span></span><br><span class=\"line\">        <span class=\"comment\"># 将优化器中对应的每一个参数清零</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.zero_grad()</span></span><br><span class=\"line\">        <span class=\"comment\"># 反向传播求出每个节点的梯度</span></span><br><span class=\"line\">        <span class=\"string\">result_loss.backward()</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.step()</span></span><br><span class=\"line\">        <span class=\"comment\"># print(result_loss)</span></span><br><span class=\"line\">        <span class=\"string\">runing_loss</span> <span class=\"string\">+=</span> <span class=\"string\">result_loss</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">print(runing_loss)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"网络模型\"><a class=\"markdownIt-Anchor\" href=\"#网络模型\">#</a> 网络模型</h1>\n<h2 id=\"现有网络模型的使用及修改\"><a class=\"markdownIt-Anchor\" href=\"#现有网络模型的使用及修改\">#</a> 现有网络模型的使用及修改</h2>\n<details class=\"success\"><summary>数据集</summary><div>\n<p>;;;<br>\n<span class=\"label success\">success</span></p>\n<div class=\"links\"><div class=\"item\" title=\"VGG16\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWVVaDl4S0F4U1RRUWkwWHlEQ1p6UHc/cHdkPXA3anc=\" data-background-image=\"https://img.88icon.com/download/jpg/201912/20212877d98b95ae7730decb11762bac.jpg!bg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWVVaDl4S0F4U1RRUWkwWHlEQ1p6UHc/cHdkPXA3anc=\">VGG16</span>\n          <p class=\"desc\">密码p7jw</p>\n          </div></div></div>\n<p>;;;</p>\n</div></details>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torchvision.models</span> <span class=\"string\">import</span> <span class=\"string\">vgg16,</span> <span class=\"string\">VGG16_Weights</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># train_data = torchvision.datasets.ImageNet(&quot;./data&quot;,split=&#x27;train&#x27;,download= True,</span></span><br><span class=\"line\"><span class=\"comment\">#                                            transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置权重文件的存储路径,默认保存到以下路径的checkpoints中</span></span><br><span class=\"line\"><span class=\"string\">torch.hub.set_dir(&#x27;./data&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  The parameter &#x27;pretrained&#x27; is deprecated since 0.13 and may be removed in the future, please use &#x27;weights&#x27; instead.</span></span><br><span class=\"line\"><span class=\"comment\"># vgg16_false = torchvision.models.vgg16(pretrained=False)</span></span><br><span class=\"line\"><span class=\"comment\"># vgg16_true = torchvision.models.vgg16(pretrained=True)</span></span><br><span class=\"line\"><span class=\"string\">vgg16_false</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.models.vgg16(weights=None)</span></span><br><span class=\"line\"><span class=\"string\">vgg16_true</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.models.vgg16(weights=VGG16_Weights.DEFAULT)</span></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;ok&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">print(vgg16_true)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">train_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=True,</span> <span class=\"string\">download=True,</span> <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改动结构</span></span><br><span class=\"line\"><span class=\"string\">vgg16_true.classifier.add_module(&#x27;add_linear&#x27;,</span> <span class=\"string\">nn.Linear(1000,</span> <span class=\"number\">10</span><span class=\"string\">))</span></span><br><span class=\"line\"><span class=\"string\">print(vgg16_true)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">print(vgg16_false)</span></span><br><span class=\"line\"><span class=\"string\">vgg16_false.classifier[6]</span> <span class=\"string\">=</span> <span class=\"string\">nn.Linear(4096,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\">print(vgg16_false)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"网络模型的保存与读取\"><a class=\"markdownIt-Anchor\" href=\"#网络模型的保存与读取\">#</a> 网络模型的保存与读取</h2>\n<ul>\n<li>模型的保存</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">torch.hub.set_dir(&#x27;./data&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">vgg16</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.models.vgg16(weights=None)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式1 模型结构+模型参数</span></span><br><span class=\"line\"><span class=\"string\">torch.save(vgg16,&quot;vgg_method1.pth&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2  模型参数（官方推荐）</span></span><br><span class=\"line\"><span class=\"string\">torch.save(vgg16.state_dict(),&quot;vgg_method2.pth&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>模型的读取</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">model_save</span> <span class=\"string\">import</span> <span class=\"string\">vgg16</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">model_save</span> <span class=\"string\">import</span> <span class=\"string\">*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式1 -&gt; 保存方式1，加载模型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">model</span> <span class=\"string\">=</span> <span class=\"string\">torch.load(&quot;vgg_method1.pth&quot;,weights_only=False)</span></span><br><span class=\"line\"><span class=\"string\">print(model)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2</span></span><br><span class=\"line\"><span class=\"string\">torch.hub.set_dir(&#x27;./data&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">vgg16.load_state_dict(torch.load(&quot;vgg_method2.pth&quot;))</span></span><br><span class=\"line\"><span class=\"comment\"># model2 = torch.load(&quot;vgg_method2.pth&quot;,weights_only=False)</span></span><br><span class=\"line\"><span class=\"string\">print(vgg16)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式1陷阱</span></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.conv1</span> <span class=\"string\">=</span> <span class=\"string\">nn.Conv2d(3,64,kernel_size=3)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.conv1(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># xylia = Xylia()</span></span><br><span class=\"line\"><span class=\"comment\"># model = torch.save(xylia,&quot;xylia_method1.pth&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 陷阱1</span></span><br><span class=\"line\"><span class=\"string\">model</span> <span class=\"string\">=</span> <span class=\"string\">torch.load(&quot;xylia_method1.pth&quot;,weights_only=False)</span></span><br><span class=\"line\"><span class=\"string\">print(model)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"完整的模型训练套路\"><a class=\"markdownIt-Anchor\" href=\"#完整的模型训练套路\">#</a> 完整的模型训练套路</h2>\n<ul>\n<li>.item()</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">a</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor(5)</span></span><br><span class=\"line\"><span class=\"string\">print(a)</span></span><br><span class=\"line\"><span class=\"string\">print(a.item())</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>.argmax</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([[0.1,0.2],</span></span><br><span class=\"line\">                        [<span class=\"number\">0.05</span>,<span class=\"number\">0.4</span>]<span class=\"string\">])</span></span><br><span class=\"line\"><span class=\"comment\"># 1横看 0纵看</span></span><br><span class=\"line\"><span class=\"string\">print(outputs.argmax(1))</span></span><br><span class=\"line\"><span class=\"comment\"># print(outputs.argmax(0))</span></span><br><span class=\"line\"><span class=\"string\">preds</span> <span class=\"string\">=</span> <span class=\"string\">outputs.argmax(1)</span></span><br><span class=\"line\"><span class=\"string\">targets</span> <span class=\"string\">=</span> <span class=\"string\">torch.tensor([0,1])</span></span><br><span class=\"line\"><span class=\"string\">print((preds</span> <span class=\"string\">==</span> <span class=\"string\">targets).sum())</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>完整代码</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch.optim</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">model</span> <span class=\"string\">import</span> <span class=\"string\">Xylia</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备数据集</span></span><br><span class=\"line\"><span class=\"string\">train_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&#x27;./data&#x27;,</span> <span class=\"string\">train=True,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                          <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">test_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&#x27;./data&#x27;,</span> <span class=\"string\">train=False,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                         <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># length 长度</span></span><br><span class=\"line\"><span class=\"string\">train_data_size</span> <span class=\"string\">=</span> <span class=\"string\">len(train_data)</span></span><br><span class=\"line\"><span class=\"string\">test_data_size</span> <span class=\"string\">=</span> <span class=\"string\">len(test_data)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;训练集的长度为&#123;&#125;&quot;.format(train_data_size))</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;测试集的长度为&#123;&#125;&quot;.format(test_data_size))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用dataloader加载数据集</span></span><br><span class=\"line\"><span class=\"string\">train_dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(train_data,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"><span class=\"string\">test_dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(test_data,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搭建神经网络</span></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.module</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64</span> <span class=\"string\">*</span> <span class=\"number\">4</span> <span class=\"string\">*</span> <span class=\"number\">4</span><span class=\"string\">,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.module(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建网络模型</span></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建损失函数</span></span><br><span class=\"line\"><span class=\"string\">loss_fn</span> <span class=\"string\">=</span> <span class=\"string\">nn.CrossEntropyLoss()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\"><span class=\"comment\"># 1e-2=1*(10)^(-2)=1</span></span><br><span class=\"line\"><span class=\"string\">leaning_rate</span> <span class=\"string\">=</span> <span class=\"number\">0.01</span></span><br><span class=\"line\"><span class=\"string\">optimizer</span> <span class=\"string\">=</span> <span class=\"string\">torch.optim.SGD(xylia.parameters(),</span> <span class=\"string\">lr=leaning_rate)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置训练网络的参数</span></span><br><span class=\"line\"><span class=\"comment\"># 记录训练的次数</span></span><br><span class=\"line\"><span class=\"string\">total_train_step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\"># 记录测试的次数</span></span><br><span class=\"line\"><span class=\"string\">total_test_step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\"># 训练轮数</span></span><br><span class=\"line\"><span class=\"string\">epoch</span> <span class=\"string\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"string\">total_accuracy</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加tensorboard</span></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&#x27;./log_train&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">for epoch in range(epoch):</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;----------------------------第&#123;&#125;轮开始--------------------------&quot;.format(epoch))</span></span><br><span class=\"line\">    <span class=\"comment\"># 训练步骤开始</span></span><br><span class=\"line\">    <span class=\"string\">xylia.train()</span></span><br><span class=\"line\">    <span class=\"attr\">for data in train_dataloader:</span></span><br><span class=\"line\">        <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">        <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">        <span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn(outputs,</span> <span class=\"string\">targets)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 优化器优化模型</span></span><br><span class=\"line\">        <span class=\"comment\"># 梯度清零</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.zero_grad()</span></span><br><span class=\"line\">        <span class=\"string\">loss.backward()</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.step()</span></span><br><span class=\"line\">        <span class=\"string\">total_train_step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;训练次数：&#123;&#125;，loss：&#123;&#125;&quot;.format(total_train_step, loss))</span></span><br><span class=\"line\">        <span class=\"string\">if</span> <span class=\"string\">total_train_step</span> <span class=\"string\">%</span> <span class=\"number\">100</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">            <span class=\"string\">print(&quot;训练次数：&#123;&#125;，loss：&#123;&#125;&quot;.format(total_train_step,</span> <span class=\"string\">loss.item()))</span></span><br><span class=\"line\">            <span class=\"string\">writer.add_scalar(&#x27;train_loss&#x27;,</span> <span class=\"string\">loss.item(),</span> <span class=\"string\">total_train_step)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 判断模型是否训练好/达到需求，评估</span></span><br><span class=\"line\">    <span class=\"comment\"># 测试</span></span><br><span class=\"line\">    <span class=\"string\">xylia.eval()</span></span><br><span class=\"line\">    <span class=\"string\">total_test_loss</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\"># 去掉梯度</span></span><br><span class=\"line\">    <span class=\"attr\">with torch.no_grad():</span></span><br><span class=\"line\">        <span class=\"attr\">for data in test_dataloader:</span></span><br><span class=\"line\">            <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">            <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">            <span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn(outputs,</span> <span class=\"string\">targets)</span></span><br><span class=\"line\">            <span class=\"string\">total_test_loss</span> <span class=\"string\">+=</span> <span class=\"string\">loss.item()</span></span><br><span class=\"line\">            <span class=\"string\">accuracy</span> <span class=\"string\">=</span> <span class=\"string\">(outputs.argmax(1)</span> <span class=\"string\">==</span> <span class=\"string\">targets).sum()</span></span><br><span class=\"line\">            <span class=\"string\">total_accuracy</span> <span class=\"string\">+=</span> <span class=\"string\">accuracy.item()</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;整体测试集上的loss：&#123;&#125;&quot;.format(total_test_loss))</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;整体测试集上的正确率：&#123;&#125;&quot;.format(total_accuracy</span> <span class=\"string\">/</span> <span class=\"string\">train_data_size))</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(&#x27;test_loss&#x27;,</span> <span class=\"string\">total_test_loss,</span> <span class=\"string\">total_test_step)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(&#x27;test_accuracy&#x27;,</span> <span class=\"string\">total_accuracy</span> <span class=\"string\">/</span> <span class=\"string\">train_data_size,</span> <span class=\"string\">total_test_step)</span></span><br><span class=\"line\">    <span class=\"string\">total_test_step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">torch.save(xylia,&quot;xylia_&#123;&#125;.pth&quot;.format(epoch))</span></span><br><span class=\"line\">    <span class=\"comment\"># torch.save(xylia.state.dict(),&quot;xylia_&#123;&#125;.pth&quot;.format(i))</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;模型已保存&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"利用gpu训练\"><a class=\"markdownIt-Anchor\" href=\"#利用gpu训练\">#</a> 利用 GPU 训练</h2>\n<p>只有网络模型，数据（输入，标注），损失函数有.cuda () 方法</p>\n<ul>\n<li>.cuda()</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```gpu</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch.optim</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备数据集</span></span><br><span class=\"line\"><span class=\"string\">train_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&#x27;./data&#x27;,</span> <span class=\"string\">train=True,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                          <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">test_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&#x27;./data&#x27;,</span> <span class=\"string\">train=False,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                         <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># length 长度</span></span><br><span class=\"line\"><span class=\"string\">train_data_size</span> <span class=\"string\">=</span> <span class=\"string\">len(train_data)</span></span><br><span class=\"line\"><span class=\"string\">test_data_size</span> <span class=\"string\">=</span> <span class=\"string\">len(test_data)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;训练集的长度为&#123;&#125;&quot;.format(train_data_size))</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;测试集的长度为&#123;&#125;&quot;.format(test_data_size))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用dataloader加载数据集</span></span><br><span class=\"line\"><span class=\"string\">train_dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(train_data,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"><span class=\"string\">test_dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(test_data,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搭建神经网络</span></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.module</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64</span> <span class=\"string\">*</span> <span class=\"number\">4</span> <span class=\"string\">*</span> <span class=\"number\">4</span><span class=\"string\">,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.module(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建网络模型</span></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"attr\">if torch.cuda.is_available():</span></span><br><span class=\"line\">    <span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">xylia.cuda()</span>    <span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建损失函数</span></span><br><span class=\"line\"><span class=\"string\">loss_fn</span> <span class=\"string\">=</span> <span class=\"string\">nn.CrossEntropyLoss()</span></span><br><span class=\"line\"><span class=\"attr\">if torch.cuda.is_available():</span></span><br><span class=\"line\">    <span class=\"string\">loss_fn</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn.cuda()</span>     <span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\"><span class=\"comment\"># 1e-2=1*(10)^(-2)=1</span></span><br><span class=\"line\"><span class=\"string\">leaning_rate</span> <span class=\"string\">=</span> <span class=\"number\">0.01</span></span><br><span class=\"line\"><span class=\"string\">optimizer</span> <span class=\"string\">=</span> <span class=\"string\">torch.optim.SGD(xylia.parameters(),</span> <span class=\"string\">lr=leaning_rate)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置训练网络的参数</span></span><br><span class=\"line\"><span class=\"comment\"># 记录训练的次数</span></span><br><span class=\"line\"><span class=\"string\">total_train_step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\"># 记录测试的次数</span></span><br><span class=\"line\"><span class=\"string\">total_test_step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\"># 训练轮数</span></span><br><span class=\"line\"><span class=\"string\">epoch</span> <span class=\"string\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"string\">total_accuracy</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加tensorboard</span></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&#x27;./log_train&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">start_time</span> <span class=\"string\">=</span> <span class=\"string\">time.time()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">for epoch in range(epoch):</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;----------------------------第&#123;&#125;轮开始--------------------------&quot;.format(epoch))</span></span><br><span class=\"line\">    <span class=\"comment\"># 训练步骤开始</span></span><br><span class=\"line\">    <span class=\"attr\">for data in train_dataloader:</span></span><br><span class=\"line\">        <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">        <span class=\"attr\">if torch.cuda.is_available():</span></span><br><span class=\"line\">            <span class=\"string\">imgs</span> <span class=\"string\">=</span> <span class=\"string\">imgs.cuda()</span></span><br><span class=\"line\">            <span class=\"string\">targets=</span> <span class=\"string\">targets.cuda()</span></span><br><span class=\"line\">        <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">        <span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn(outputs,</span> <span class=\"string\">targets)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 优化器优化模型</span></span><br><span class=\"line\">        <span class=\"comment\"># 梯度清零</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.zero_grad()</span></span><br><span class=\"line\">        <span class=\"string\">loss.backward()</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.step()</span></span><br><span class=\"line\">        <span class=\"string\">total_train_step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;训练次数：&#123;&#125;，loss：&#123;&#125;&quot;.format(total_train_step, loss))</span></span><br><span class=\"line\">        <span class=\"string\">if</span> <span class=\"string\">total_train_step</span> <span class=\"string\">%</span> <span class=\"number\">100</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">            <span class=\"string\">end_time</span> <span class=\"string\">=</span> <span class=\"string\">time.time()</span></span><br><span class=\"line\">            <span class=\"string\">print(end_time</span> <span class=\"bullet\">-</span> <span class=\"string\">start_time)</span></span><br><span class=\"line\">            <span class=\"string\">print(&quot;训练次数：&#123;&#125;，loss：&#123;&#125;&quot;.format(total_train_step,</span> <span class=\"string\">loss.item()))</span></span><br><span class=\"line\">            <span class=\"string\">writer.add_scalar(&#x27;train_loss&#x27;,</span> <span class=\"string\">loss.item(),</span> <span class=\"string\">total_train_step)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 判断模型是否训练好/达到需求，评估</span></span><br><span class=\"line\">    <span class=\"comment\"># 测试</span></span><br><span class=\"line\">    <span class=\"string\">total_test_loss</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"attr\">with torch.no_grad():</span></span><br><span class=\"line\">        <span class=\"attr\">for data in test_dataloader:</span></span><br><span class=\"line\">            <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">            <span class=\"attr\">if torch.cuda.is_available():</span></span><br><span class=\"line\">                <span class=\"string\">imgs=</span> <span class=\"string\">imgs.cuda()</span></span><br><span class=\"line\">                <span class=\"string\">targets</span> <span class=\"string\">=</span> <span class=\"string\">targets.cuda()</span></span><br><span class=\"line\">            <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">            <span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn(outputs,</span> <span class=\"string\">targets)</span></span><br><span class=\"line\">            <span class=\"string\">total_test_loss</span> <span class=\"string\">+=</span> <span class=\"string\">loss.item()</span></span><br><span class=\"line\">            <span class=\"string\">accuracy</span> <span class=\"string\">=</span> <span class=\"string\">(outputs.argmax(1)</span> <span class=\"string\">==</span> <span class=\"string\">targets).sum()</span></span><br><span class=\"line\">            <span class=\"string\">total_accuracy</span> <span class=\"string\">+=</span> <span class=\"string\">accuracy.item()</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;整体测试集上的loss：&#123;&#125;&quot;.format(total_test_loss))</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;整体测试集上的正确率：&#123;&#125;&quot;.format(total_accuracy</span> <span class=\"string\">/</span> <span class=\"string\">train_data_size))</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(&#x27;test_loss&#x27;,</span> <span class=\"string\">total_test_loss,</span> <span class=\"string\">total_test_step)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(&#x27;test_accuracy&#x27;,</span> <span class=\"string\">total_accuracy</span> <span class=\"string\">/</span> <span class=\"string\">train_data_size,</span> <span class=\"string\">total_test_step)</span></span><br><span class=\"line\">    <span class=\"string\">total_test_step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">torch.save(xylia,&quot;xylia_&#123;&#125;.pth&quot;.format(epoch))</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;模型已保存&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2xhYi5nb29nbGUv\">colab.google</span></p>\n<ul>\n<li>.to(device)</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch.optim</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn,</span> <span class=\"string\">device</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个设备</span></span><br><span class=\"line\"><span class=\"string\">decive</span> <span class=\"string\">=</span> <span class=\"string\">torch.device(&#x27;cpu&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># decive = torch.device(&#x27;cuda&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># decive = torch.device(&#x27;cuda:0&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># decive = torch.device(&#x27;cuda:0&#x27;,if torch.cuda.is_available() else &quot;cpu&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 准备数据集</span></span><br><span class=\"line\"><span class=\"string\">train_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&#x27;./data&#x27;,</span> <span class=\"string\">train=True,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                          <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">test_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&#x27;./data&#x27;,</span> <span class=\"string\">train=False,</span> <span class=\"string\">download=True,</span></span><br><span class=\"line\">                                         <span class=\"string\">transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># length 长度</span></span><br><span class=\"line\"><span class=\"string\">train_data_size</span> <span class=\"string\">=</span> <span class=\"string\">len(train_data)</span></span><br><span class=\"line\"><span class=\"string\">test_data_size</span> <span class=\"string\">=</span> <span class=\"string\">len(test_data)</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;训练集的长度为&#123;&#125;&quot;.format(train_data_size))</span></span><br><span class=\"line\"><span class=\"string\">print(&quot;测试集的长度为&#123;&#125;&quot;.format(test_data_size))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用dataloader加载数据集</span></span><br><span class=\"line\"><span class=\"string\">train_dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(train_data,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"><span class=\"string\">test_dataloader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(test_data,</span> <span class=\"string\">batch_size=64)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搭建神经网络</span></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.module</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64</span> <span class=\"string\">*</span> <span class=\"number\">4</span> <span class=\"string\">*</span> <span class=\"number\">4</span><span class=\"string\">,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.module(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建网络模型</span></span><br><span class=\"line\"><span class=\"string\">xylia</span> <span class=\"string\">=</span> <span class=\"string\">Xylia()</span></span><br><span class=\"line\"><span class=\"string\">xylia.to(device)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建损失函数</span></span><br><span class=\"line\"><span class=\"string\">loss_fn</span> <span class=\"string\">=</span> <span class=\"string\">nn.CrossEntropyLoss()</span></span><br><span class=\"line\"><span class=\"string\">loss_fn</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn.to(device)</span>   <span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义优化器</span></span><br><span class=\"line\"><span class=\"comment\"># 1e-2=1*(10)^(-2)=1</span></span><br><span class=\"line\"><span class=\"string\">leaning_rate</span> <span class=\"string\">=</span> <span class=\"number\">0.01</span></span><br><span class=\"line\"><span class=\"string\">optimizer</span> <span class=\"string\">=</span> <span class=\"string\">torch.optim.SGD(xylia.parameters(),</span> <span class=\"string\">lr=leaning_rate)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置训练网络的参数</span></span><br><span class=\"line\"><span class=\"comment\"># 记录训练的次数</span></span><br><span class=\"line\"><span class=\"string\">total_train_step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\"># 记录测试的次数</span></span><br><span class=\"line\"><span class=\"string\">total_test_step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\"># 训练轮数</span></span><br><span class=\"line\"><span class=\"string\">epoch</span> <span class=\"string\">=</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"string\">total_accuracy</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加tensorboard</span></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&#x27;./log_train&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">start_time</span> <span class=\"string\">=</span> <span class=\"string\">time.time()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">for epoch in range(epoch):</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;----------------------------第&#123;&#125;轮开始--------------------------&quot;.format(epoch))</span></span><br><span class=\"line\">    <span class=\"comment\"># 训练步骤开始</span></span><br><span class=\"line\">    <span class=\"attr\">for data in train_dataloader:</span></span><br><span class=\"line\">        <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">        <span class=\"string\">imgs</span> <span class=\"string\">=</span> <span class=\"string\">imgs.to(device)</span></span><br><span class=\"line\">        <span class=\"string\">targets</span> <span class=\"string\">=</span> <span class=\"string\">targets.to(device)</span></span><br><span class=\"line\">        <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">        <span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn(outputs,</span> <span class=\"string\">targets)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 优化器优化模型</span></span><br><span class=\"line\">        <span class=\"comment\"># 梯度清零</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.zero_grad()</span></span><br><span class=\"line\">        <span class=\"string\">loss.backward()</span></span><br><span class=\"line\">        <span class=\"string\">optimizer.step()</span></span><br><span class=\"line\">        <span class=\"string\">total_train_step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># print(&quot;训练次数：&#123;&#125;，loss：&#123;&#125;&quot;.format(total_train_step, loss))</span></span><br><span class=\"line\">        <span class=\"string\">if</span> <span class=\"string\">total_train_step</span> <span class=\"string\">%</span> <span class=\"number\">100</span> <span class=\"string\">==</span> <span class=\"attr\">0:</span></span><br><span class=\"line\">            <span class=\"string\">end_time</span> <span class=\"string\">=</span> <span class=\"string\">time.time()</span></span><br><span class=\"line\">            <span class=\"string\">print(end_time</span> <span class=\"bullet\">-</span> <span class=\"string\">start_time)</span></span><br><span class=\"line\">            <span class=\"string\">print(&quot;训练次数：&#123;&#125;，loss：&#123;&#125;&quot;.format(total_train_step,</span> <span class=\"string\">loss.item()))</span></span><br><span class=\"line\">            <span class=\"string\">writer.add_scalar(&#x27;train_loss&#x27;,</span> <span class=\"string\">loss.item(),</span> <span class=\"string\">total_train_step)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 判断模型是否训练好/达到需求，评估</span></span><br><span class=\"line\">    <span class=\"comment\"># 测试</span></span><br><span class=\"line\">    <span class=\"string\">total_test_loss</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"attr\">with torch.no_grad():</span></span><br><span class=\"line\">        <span class=\"attr\">for data in test_dataloader:</span></span><br><span class=\"line\">            <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">            <span class=\"string\">imgs</span> <span class=\"string\">=</span> <span class=\"string\">imgs.to(device)</span></span><br><span class=\"line\">            <span class=\"string\">targets</span> <span class=\"string\">=</span> <span class=\"string\">targets.to(device)</span></span><br><span class=\"line\">            <span class=\"string\">outputs</span> <span class=\"string\">=</span> <span class=\"string\">xylia(imgs)</span></span><br><span class=\"line\">            <span class=\"string\">loss</span> <span class=\"string\">=</span> <span class=\"string\">loss_fn(outputs,</span> <span class=\"string\">targets)</span></span><br><span class=\"line\">            <span class=\"string\">total_test_loss</span> <span class=\"string\">+=</span> <span class=\"string\">loss.item()</span></span><br><span class=\"line\">            <span class=\"string\">accuracy</span> <span class=\"string\">=</span> <span class=\"string\">(outputs.argmax(1)</span> <span class=\"string\">==</span> <span class=\"string\">targets).sum()</span></span><br><span class=\"line\">            <span class=\"string\">total_accuracy</span> <span class=\"string\">+=</span> <span class=\"string\">accuracy.item()</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;整体测试集上的loss：&#123;&#125;&quot;.format(total_test_loss))</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;整体测试集上的正确率：&#123;&#125;&quot;.format(total_accuracy</span> <span class=\"string\">/</span> <span class=\"string\">train_data_size))</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(&#x27;test_loss&#x27;,</span> <span class=\"string\">total_test_loss,</span> <span class=\"string\">total_test_step)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(&#x27;test_accuracy&#x27;,</span> <span class=\"string\">total_accuracy</span> <span class=\"string\">/</span> <span class=\"string\">train_data_size,</span> <span class=\"string\">total_test_step)</span></span><br><span class=\"line\">    <span class=\"string\">total_test_step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">torch.save(xylia,&quot;xylia_&#123;&#125;.pth&quot;.format(epoch))</span></span><br><span class=\"line\">    <span class=\"string\">print(&quot;模型已保存&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"完整的模型验证测试demo套路\"><a class=\"markdownIt-Anchor\" href=\"#完整的模型验证测试demo套路\">#</a> 完整的模型验证 (测试，demo) 套路</h2>\n<p>利用已经训练好的模型，然后给它提供一个输入</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">PIL</span> <span class=\"string\">import</span> <span class=\"string\">Image</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch</span> <span class=\"string\">import</span> <span class=\"string\">nn</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">device</span> <span class=\"string\">=</span> <span class=\"string\">torch.device(&quot;cuda&quot;</span> <span class=\"string\">if</span> <span class=\"string\">torch.cuda.is_available()</span> <span class=\"string\">else</span> <span class=\"string\">&quot;cpu&quot;</span><span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">img_path</span> <span class=\"string\">=</span> <span class=\"string\">&quot;./imgs/dog.jpg&quot;</span></span><br><span class=\"line\"><span class=\"string\">image</span> <span class=\"string\">=</span> <span class=\"string\">Image.open(img_path)</span></span><br><span class=\"line\"><span class=\"string\">print(image)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">transforms</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.transforms.Compose([torchvision.transforms.Resize((32,32)),</span></span><br><span class=\"line\">                                            <span class=\"string\">torchvision.transforms.ToTensor()])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">image</span> <span class=\"string\">=</span> <span class=\"string\">transforms(image)</span></span><br><span class=\"line\"><span class=\"string\">print(image.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">class Xylia(nn.Module):</span></span><br><span class=\"line\">    <span class=\"attr\">def __init__(self):</span></span><br><span class=\"line\">        <span class=\"string\">super(Xylia,</span> <span class=\"string\">self).__init__()</span></span><br><span class=\"line\">        <span class=\"string\">self.module</span> <span class=\"string\">=</span> <span class=\"string\">nn.Sequential(</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(3,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">32</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Conv2d(32,</span> <span class=\"number\">64</span><span class=\"string\">,</span> <span class=\"string\">kernel_size=5,</span> <span class=\"string\">stride=1,</span> <span class=\"string\">padding=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.MaxPool2d(kernel_size=2),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Flatten(),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64</span> <span class=\"string\">*</span> <span class=\"number\">4</span> <span class=\"string\">*</span> <span class=\"number\">4</span><span class=\"string\">,</span> <span class=\"number\">64</span><span class=\"string\">),</span></span><br><span class=\"line\">            <span class=\"string\">nn.Linear(64,</span> <span class=\"number\">10</span><span class=\"string\">)</span></span><br><span class=\"line\">        <span class=\"string\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">forward(self,</span> <span class=\"attr\">x):</span></span><br><span class=\"line\">        <span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">self.module(x)</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">model</span> <span class=\"string\">=</span> <span class=\"string\">torch.load(&quot;xylia_9.pth&quot;,weights_only=False)</span></span><br><span class=\"line\"><span class=\"string\">print(model)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将模型和输入数据移动到同一设备</span></span><br><span class=\"line\"><span class=\"string\">model</span> <span class=\"string\">=</span> <span class=\"string\">model.to(device)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">image</span> <span class=\"string\">=</span> <span class=\"string\">torch.reshape(image,(1,3,32,32))</span></span><br><span class=\"line\"><span class=\"string\">image</span> <span class=\"string\">=</span> <span class=\"string\">image.to(device)</span></span><br><span class=\"line\"><span class=\"string\">model.eval()</span></span><br><span class=\"line\"><span class=\"attr\">with torch.no_grad():</span></span><br><span class=\"line\">    <span class=\"string\">output</span> <span class=\"string\">=</span> <span class=\"string\">model(image)</span></span><br><span class=\"line\"><span class=\"string\">print(output)</span></span><br><span class=\"line\"><span class=\"string\">print(output.argmax(dim=1))</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/Mia-Xylia/Mia-Xylia-pictures@master/img/09612e111516390645e8f5710aadede.png\" alt=\"img\"></p>\n",
            "tags": [
                "笔记",
                "pytorch基础"
            ]
        },
        {
            "id": "http://example.com/2025/03/25/computer-science/python/pytorch1/",
            "url": "http://example.com/2025/03/25/computer-science/python/pytorch1/",
            "title": "笔记：PyTorch(1)",
            "date_published": "2025-03-24T16:00:00.000Z",
            "content_html": "<h1 id=\"加载数据的方式\"><a class=\"markdownIt-Anchor\" href=\"#加载数据的方式\">#</a> 加载数据的方式</h1>\n<ul>\n<li>Dataset<br>\n 提供一种方式去获取数据及其 label<br>\n 如何获取每一个数据及其 label<br>\n 告诉我们总共有多少的数据</li>\n<li>Dataloader<br>\n 为后面网络提供不同的数据形式</li>\n</ul>\n<h1 id=\"使用dataset\"><a class=\"markdownIt-Anchor\" href=\"#使用dataset\">#</a> 使用 dataset</h1>\n<ul>\n<li>查看 dataset 的使用说明</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```jupyter</span> <span class=\"string\">notebook</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">Dataset</span></span><br><span class=\"line\"><span class=\"string\">help(Dataset)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>实战</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">Dataset</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">PIL</span> <span class=\"string\">import</span> <span class=\"string\">Image</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">os</span></span><br><span class=\"line\"><span class=\"attr\">class MyData(Dataset):</span></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">__init__(self,root_dir,lable_dir):</span></span><br><span class=\"line\">        <span class=\"string\">self.root_dir</span> <span class=\"string\">=</span> <span class=\"string\">root_dir</span></span><br><span class=\"line\">        <span class=\"string\">self.lable_dir</span> <span class=\"string\">=</span> <span class=\"string\">lable_dir</span></span><br><span class=\"line\">        <span class=\"string\">self.path</span> <span class=\"string\">=</span> <span class=\"string\">os.path.join(self.root_dir,self.lable_dir)</span></span><br><span class=\"line\">        <span class=\"string\">self.img_path</span> <span class=\"string\">=</span> <span class=\"string\">os.listdir(self.path)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">__getitem__(self,</span> <span class=\"attr\">index):</span></span><br><span class=\"line\">        <span class=\"string\">img_name</span> <span class=\"string\">=</span> <span class=\"string\">self.img_path[index]</span></span><br><span class=\"line\">        <span class=\"string\">img_item_path</span> <span class=\"string\">=</span> <span class=\"string\">os.path.join(self.root_dir,self.lable_dir,img_name)</span></span><br><span class=\"line\">        <span class=\"string\">img</span> <span class=\"string\">=</span> <span class=\"string\">Image.open(img_item_path)</span></span><br><span class=\"line\">        <span class=\"string\">label</span> <span class=\"string\">=</span> <span class=\"string\">self.lable_dir</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">img,</span> <span class=\"string\">label</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">def __len__(self):</span></span><br><span class=\"line\">        <span class=\"string\">return</span> <span class=\"string\">len(self.img_path)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">root_dir</span> <span class=\"string\">=</span> <span class=\"string\">r&#x27;dataset/train&#x27;</span></span><br><span class=\"line\"><span class=\"string\">ants_lable_dir</span> <span class=\"string\">=</span> <span class=\"string\">&#x27;ants_image&#x27;</span></span><br><span class=\"line\"><span class=\"string\">bees_lable_dir</span> <span class=\"string\">=</span> <span class=\"string\">&#x27;bees_image&#x27;</span></span><br><span class=\"line\"><span class=\"string\">ants_dataset</span> <span class=\"string\">=</span> <span class=\"string\">MyData(root_dir,ants_lable_dir)</span></span><br><span class=\"line\"><span class=\"string\">bees_dataset</span> <span class=\"string\">=</span> <span class=\"string\">MyData(root_dir,bees_lable_dir)</span></span><br><span class=\"line\"><span class=\"comment\"># 合并数据</span></span><br><span class=\"line\"><span class=\"string\">dataset</span> <span class=\"string\">=</span> <span class=\"string\">ants_dataset</span> <span class=\"string\">+</span> <span class=\"string\">bees_dataset</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看长度</span></span><br><span class=\"line\"><span class=\"string\">len(ants_lable_dir)</span></span><br><span class=\"line\"><span class=\"string\">len(bees_lable_dir)</span></span><br><span class=\"line\"><span class=\"string\">len(dataset)</span></span><br><span class=\"line\"><span class=\"string\">print(f&quot;一共有&#123;len(dataset)&#125;张图片&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"># 展示图片</span></span><br><span class=\"line\"><span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">input(&quot;请输入你想查询的图片编号&quot;)</span></span><br><span class=\"line\"><span class=\"string\">x</span> <span class=\"string\">=</span> <span class=\"string\">int(x)</span></span><br><span class=\"line\"><span class=\"string\">img,label</span> <span class=\"string\">=</span> <span class=\"string\">dataset[x]</span></span><br><span class=\"line\"><span class=\"string\">img.show()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"tensorboard的使用\"><a class=\"markdownIt-Anchor\" href=\"#tensorboard的使用\">#</a> TensorBoard 的使用</h2>\n<ul>\n<li>安装 tensorboard</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```终端</span></span><br><span class=\"line\"><span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">tensorboard</span></span><br><span class=\"line\"><span class=\"comment\"># logdir = 事件文件所在文件夹名</span></span><br><span class=\"line\"><span class=\"string\">tensorboard</span> <span class=\"string\">--logdir=log</span> <span class=\"string\">--port=6007</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用add_scalar\"><a class=\"markdownIt-Anchor\" href=\"#使用add_scalar\">#</a> 使用 add_scalar</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;log&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># writer.add_image()</span></span><br><span class=\"line\"><span class=\"comment\"># y = 2x</span></span><br><span class=\"line\"><span class=\"attr\">for i in range(100):</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(tag=&quot;y=x&quot;,</span> <span class=\"string\">scalar_value=i,</span> <span class=\"string\">global_step=i)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(tag=&quot;y=2x&quot;,</span> <span class=\"string\">scalar_value=2*i,</span> <span class=\"string\">global_step=i)#</span> <span class=\"string\">标题，数值（y轴），训练的步数（x轴）</span></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">```终端</span></span><br><span class=\"line\"><span class=\"string\">tensorboard</span> <span class=\"string\">--logdir=log</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用add_image\"><a class=\"markdownIt-Anchor\" href=\"#使用add_image\">#</a> 使用 add_image</h3>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python控制台</span></span><br><span class=\"line\"><span class=\"string\">image_path</span> <span class=\"string\">=</span> <span class=\"string\">&quot;dataset/train/ants_image/0013035.jpg&quot;</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">PIL</span> <span class=\"string\">import</span> <span class=\"string\">Image</span></span><br><span class=\"line\"><span class=\"string\">img</span> <span class=\"string\">=</span> <span class=\"string\">Image.open(image_path)</span></span><br><span class=\"line\"><span class=\"string\">print(type(img))</span> </span><br><span class=\"line\"><span class=\"string\">&lt;class</span> <span class=\"string\">&#x27;PIL.JpegImagePlugin.JpegImageFile&#x27;</span><span class=\"string\">&gt;</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<details class=\"success\"><summary>img的类型不符合add_image</summary><div>\n<p>img_tensor (torch.Tensor, numpy.ndarray, or string/blobname): Image data</p>\n</div></details>\n<ul>\n<li>使用 opencv 读取图片，获得 numpy 型图片数据</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```终端</span></span><br><span class=\"line\"><span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">opencv-python</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">cv2</span></span><br><span class=\"line\"><span class=\"string\">cv_img</span> <span class=\"string\">=</span> <span class=\"string\">cv2.imread(img_path)</span></span><br><span class=\"line\"><span class=\"string\">print(type(cv_img))</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>利用 numpy.array ()，对 PIL 图片进行转换</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python控制台</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">numpy</span> <span class=\"string\">as</span> <span class=\"string\">np</span></span><br><span class=\"line\"><span class=\"string\">img_array</span> <span class=\"string\">=</span> <span class=\"string\">np.array(img)</span></span><br><span class=\"line\"><span class=\"string\">print(type(img_array))</span></span><br><span class=\"line\"><span class=\"string\">&lt;class</span> <span class=\"string\">&#x27;numpy.ndarray&#x27;</span><span class=\"string\">&gt;</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>实战</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">PIL</span> <span class=\"string\">import</span> <span class=\"string\">Image</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">numpy</span> <span class=\"string\">as</span> <span class=\"string\">np</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;log&quot;)</span></span><br><span class=\"line\"><span class=\"string\">img_path</span> <span class=\"string\">=</span> <span class=\"string\">&quot;dataset/train/bees_image/16838648_415acd9e3f.jpg&quot;</span></span><br><span class=\"line\"><span class=\"string\">img_PIL</span> <span class=\"string\">=</span> <span class=\"string\">Image.open(img_path)</span></span><br><span class=\"line\"><span class=\"string\">img_array</span> <span class=\"string\">=</span> <span class=\"string\">np.array(img_PIL)</span></span><br><span class=\"line\"><span class=\"string\">print(type(img_array))</span></span><br><span class=\"line\"><span class=\"string\">print(img_array.shape)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.add_image(&quot;test&quot;,img_array,2,dataformats=&#x27;HWC&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># y = 2x</span></span><br><span class=\"line\"><span class=\"attr\">for i in range(100):</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(tag=&quot;y=x&quot;,</span> <span class=\"string\">scalar_value=i,</span> <span class=\"string\">global_step=i)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_scalar(tag=&quot;y=2x&quot;,</span> <span class=\"string\">scalar_value=2*i,</span> <span class=\"string\">global_step=i)#</span> <span class=\"string\">标题，数值（y轴），训练的步数（x轴）</span></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"常见的transforms\"><a class=\"markdownIt-Anchor\" href=\"#常见的transforms\">#</a> 常见的 Transforms</h1>\n<p>关注输入，输出和作用</p>\n<details class=\"success\"><summary>init__call__的作用</summary><div>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"attr\">class Person:</span></span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">__call__(self,name):</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;__call__&quot;+&quot;Helle&quot;+name)</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"string\">def</span> <span class=\"string\">hello(self,name):</span></span><br><span class=\"line\">        <span class=\"string\">print(&quot;hello&quot;+name)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">person</span> <span class=\"string\">=</span> <span class=\"string\">Person()</span></span><br><span class=\"line\"><span class=\"string\">person(&quot;张三&quot;)</span></span><br><span class=\"line\"><span class=\"string\">person.hello(&quot;lisi&quot;)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"label\">例子</span></p>\n</div></details>\n<h2 id=\"对比\"><a class=\"markdownIt-Anchor\" href=\"#对比\">#</a> 对比</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">PIL</span> <span class=\"string\">import</span> <span class=\"string\">Image</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torchvision</span> <span class=\"string\">import</span>  <span class=\"string\">transforms</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 相对路径</span></span><br><span class=\"line\"><span class=\"comment\"># PIL</span></span><br><span class=\"line\"><span class=\"string\">img_path</span> <span class=\"string\">=&quot;dataset/train/ants_image/0013035.jpg&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 绝对路径</span></span><br><span class=\"line\"><span class=\"comment\"># img_path_abs = r&quot;F:\\doc\\python\\1\\Learn-PyTorch\\dataset\\train\\ants_image\\0013035.jpg&quot;</span></span><br><span class=\"line\"><span class=\"string\">img</span> <span class=\"string\">=</span> <span class=\"string\">Image.open(img_path)</span></span><br><span class=\"line\"><span class=\"string\">print(type(img))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Tensor</span></span><br><span class=\"line\"><span class=\"string\">tensor_trans</span> <span class=\"string\">=</span> <span class=\"string\">transforms.ToTensor()</span></span><br><span class=\"line\"><span class=\"string\">tensor_img</span> <span class=\"string\">=</span> <span class=\"string\">tensor_trans(img)</span></span><br><span class=\"line\"><span class=\"string\">print(tensor_img)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>创建具体的工具 tensor_trans，使用这个具体的工具，给它一个输入 img，获得一个输出</p>\n<h2 id=\"transformstotensor\"><a class=\"markdownIt-Anchor\" href=\"#transformstotensor\">#</a> transforms.ToTensor</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">PIL</span> <span class=\"string\">import</span> <span class=\"string\">Image</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torchvision</span> <span class=\"string\">import</span>  <span class=\"string\">transforms</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">cv2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">img_path</span> <span class=\"string\">=&quot;dataset/train/ants_image/0013035.jpg&quot;</span></span><br><span class=\"line\"><span class=\"string\">print(type(img))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">tensor_trans</span> <span class=\"string\">=</span> <span class=\"string\">transforms.ToTensor()</span></span><br><span class=\"line\"><span class=\"string\">tensor_img</span> <span class=\"string\">=</span> <span class=\"string\">tensor_trans(img)</span></span><br><span class=\"line\"><span class=\"string\">print(tensor_img)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;log&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.add_image(&quot;Tensor_img&quot;,tensor_img)</span></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"topilimage\"><a class=\"markdownIt-Anchor\" href=\"#topilimage\">#</a> ToPILImage</h2>\n<p>作用：把数据转化为 PIL 的数据类型</p>\n<h2 id=\"normalize\"><a class=\"markdownIt-Anchor\" href=\"#normalize\">#</a> Normalize</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">print(img_tensor[0][0][0])</span></span><br><span class=\"line\"><span class=\"string\">trans_norm</span> <span class=\"string\">=</span> <span class=\"string\">transforms.Normalize([0.5,0.5,0.5],[0.5,0.5,0.5])</span></span><br><span class=\"line\"><span class=\"comment\"># trans_norm只能输入tensor数据类型</span></span><br><span class=\"line\"><span class=\"string\">img_norm</span> <span class=\"string\">=</span> <span class=\"string\">trans_norm(img_tensor)</span></span><br><span class=\"line\"><span class=\"string\">print(img_norm[0][0][0])</span></span><br><span class=\"line\"><span class=\"string\">writer.add_image(&quot;Normalize&quot;,img_norm)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"resize\"><a class=\"markdownIt-Anchor\" href=\"#resize\">#</a> Resize</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">print(img.size)</span></span><br><span class=\"line\"><span class=\"string\">trans_resize</span> <span class=\"string\">=</span> <span class=\"string\">transforms.Resize((512,512))</span></span><br><span class=\"line\"><span class=\"comment\"># 输入类型为PIL</span></span><br><span class=\"line\"><span class=\"string\">img_resize</span> <span class=\"string\">=</span> <span class=\"string\">trans_resize(img)</span></span><br><span class=\"line\"><span class=\"comment\"># 查看返回值类型，为PIL</span></span><br><span class=\"line\"><span class=\"string\">print(img_resize)</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将数据类型变为tensor</span></span><br><span class=\"line\"><span class=\"string\">img_resize</span> <span class=\"string\">=</span> <span class=\"string\">trans_totenser(img_resize)</span></span><br><span class=\"line\"><span class=\"string\">writer.add_image(&quot;Resize&quot;,img_resize,0)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"compose-resize等比缩放\"><a class=\"markdownIt-Anchor\" href=\"#compose-resize等比缩放\">#</a> Compose Resize（等比缩放）</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">trans_resize_2</span> <span class=\"string\">=</span> <span class=\"string\">transforms.Resize(512)</span></span><br><span class=\"line\"><span class=\"comment\"># 后面参数的输入 和 前面参数的输出 进行匹配</span></span><br><span class=\"line\"><span class=\"string\">trans_compose</span> <span class=\"string\">=</span> <span class=\"string\">transforms.Compose([trans_resize_2,trans_totenser])</span></span><br><span class=\"line\"><span class=\"comment\"># 需要输入 PIL img</span></span><br><span class=\"line\"><span class=\"string\">img_resize_2</span> <span class=\"string\">=</span> <span class=\"string\">trans_compose(img)</span></span><br><span class=\"line\"><span class=\"string\">writer.add_image(&quot;Resize&quot;,img_resize_2,1)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"randomcrop\"><a class=\"markdownIt-Anchor\" href=\"#randomcrop\">#</a> RandomCrop</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"><span class=\"string\">trans_random</span> <span class=\"string\">=</span> <span class=\"string\">transforms.RandomCrop(333)</span></span><br><span class=\"line\"><span class=\"comment\"># 进行随机裁剪，然后转化为tenser类型</span></span><br><span class=\"line\"><span class=\"string\">trans_compose</span> <span class=\"string\">=</span> <span class=\"string\">transforms.Compose([trans_random,trans_totenser])</span></span><br><span class=\"line\"><span class=\"attr\">for i in range(10):</span></span><br><span class=\"line\">    <span class=\"string\">img_crop</span> <span class=\"string\">=</span> <span class=\"string\">trans_compose(img)</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_image(&quot;RandomCrop&quot;,img_crop,i)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"dataset和transforms的联合使用\"><a class=\"markdownIt-Anchor\" href=\"#dataset和transforms的联合使用\">#</a> dataset 和 transforms 的联合使用</h1>\n<ul>\n<li>下载数据集</li>\n</ul>\n<p>视频中相同的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRvcmNoLm9yZy92aXNpb24vMC45Lw==\"> pytorch 链接</span></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">train_set</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&quot;./data&quot;,train=True,download=True)</span></span><br><span class=\"line\"><span class=\"string\">test_set</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&quot;./data&quot;,train=False,download=True)</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<details class=\"success\"><summary>数据集</summary><div>\n<p>;;;<br>\n<span class=\"label success\">success</span></p>\n<div class=\"links\"><div class=\"item\" title=\"CIFAR10.zip\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMU96LWphQlNEOHZrMVBmVHVjcXcwN3c/cHdkPTgyaWk=\" data-background-image=\"https://img.88icon.com/download/jpg/201912/20212877d98b95ae7730decb11762bac.jpg!bg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMU96LWphQlNEOHZrMVBmVHVjcXcwN3c/cHdkPTgyaWk=\">CIFAR10.zip</span>\n          <p class=\"desc\">密码82ii</p>\n          </div></div></div>\n<p>;;;</p>\n</div></details>\n<ul>\n<li>联合使用</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">test_tb</span> <span class=\"string\">import</span> <span class=\"string\">writer</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">dataset_transform</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.transforms.Compose([</span></span><br><span class=\"line\">    <span class=\"string\">torchvision.transforms.ToTensor()</span></span><br><span class=\"line\"><span class=\"string\">])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">train_set</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&quot;/data&quot;,train=True,transform=dataset_transform,download=True)</span></span><br><span class=\"line\"><span class=\"string\">test_set</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(root=&quot;/data&quot;,train=False,transform=dataset_transform,download=True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(test_set)</span></span><br><span class=\"line\"><span class=\"comment\"># print(test_set.classes)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># img,target = test_set[0]</span></span><br><span class=\"line\"><span class=\"comment\"># print(img)</span></span><br><span class=\"line\"><span class=\"comment\"># print(target)</span></span><br><span class=\"line\"><span class=\"comment\"># print(test_set.classes[target])</span></span><br><span class=\"line\"><span class=\"comment\"># img.show()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(test_set[0])</span></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;p10&quot;)</span></span><br><span class=\"line\"><span class=\"attr\">for i in range(10):</span></span><br><span class=\"line\">    <span class=\"string\">img,target</span> <span class=\"string\">=</span> <span class=\"string\">train_set[i]</span></span><br><span class=\"line\">    <span class=\"string\">writer.add_image(&quot;test_set&quot;,img,i)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"dataloader的使用\"><a class=\"markdownIt-Anchor\" href=\"#dataloader的使用\">#</a> DataLoader 的使用</h1>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```python</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torchvision.datasets</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.data</span> <span class=\"string\">import</span> <span class=\"string\">DataLoader</span></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">torch.utils.tensorboard</span> <span class=\"string\">import</span> <span class=\"string\">SummaryWriter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">from</span> <span class=\"string\">dataset_transform</span> <span class=\"string\">import</span> <span class=\"string\">test_set,</span> <span class=\"string\">writer</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">test_data</span> <span class=\"string\">=</span> <span class=\"string\">torchvision.datasets.CIFAR10(&quot;./data&quot;,</span> <span class=\"string\">train=False,transform=torchvision.transforms.ToTensor())</span></span><br><span class=\"line\"><span class=\"comment\"># 当batch_size不足64，drop_last=True将会舍去剩下的图片</span></span><br><span class=\"line\"><span class=\"comment\"># shuffle = False时两轮数据是相同的</span></span><br><span class=\"line\"><span class=\"string\">test_loader</span> <span class=\"string\">=</span> <span class=\"string\">DataLoader(dataset=test_set,</span> <span class=\"string\">batch_size=64,</span> <span class=\"string\">shuffle=False,</span> <span class=\"string\">num_workers=0,</span> <span class=\"string\">drop_last=True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试数据集中的第一张图片及target</span></span><br><span class=\"line\"><span class=\"string\">img,target</span> <span class=\"string\">=</span> <span class=\"string\">test_data[0]</span></span><br><span class=\"line\"><span class=\"string\">print(img.shape)</span></span><br><span class=\"line\"><span class=\"string\">print(target)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer</span> <span class=\"string\">=</span> <span class=\"string\">SummaryWriter(&quot;dataloader&quot;)</span></span><br><span class=\"line\"><span class=\"string\">step</span> <span class=\"string\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 两轮</span></span><br><span class=\"line\"><span class=\"attr\">for epoch in range(2):</span></span><br><span class=\"line\">    <span class=\"attr\">for data in test_loader:</span></span><br><span class=\"line\">        <span class=\"string\">imgs,targets</span> <span class=\"string\">=</span> <span class=\"string\">data</span></span><br><span class=\"line\">        <span class=\"comment\"># print(imgs.shape)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(targets)</span></span><br><span class=\"line\">        <span class=\"string\">writer.add_images(&quot;test_data_epoch_false&quot;,imgs,step)</span></span><br><span class=\"line\">        <span class=\"string\">step</span> <span class=\"string\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">writer.close()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "笔记",
                "pytorch基础"
            ]
        },
        {
            "id": "http://example.com/2025/03/23/computer-science/python/pytorch0/",
            "url": "http://example.com/2025/03/23/computer-science/python/pytorch0/",
            "title": "笔记：PyTorch(0)",
            "date_published": "2025-03-22T16:00:00.000Z",
            "content_html": "<h1 id=\"pytorch学习准备\"><a class=\"markdownIt-Anchor\" href=\"#pytorch学习准备\">#</a> PyTorch 学习准备</h1>\n<p>本章包含了学习 pytorch 需要安装的软件及其配置</p>\n<h1 id=\"课程信息\"><a class=\"markdownIt-Anchor\" href=\"#课程信息\">#</a> 课程信息</h1>\n<ul>\n<li>课程</li>\n</ul>\n<div class=\"links\"><div class=\"item\" title=\"我是土堆\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhFNDExdDdSTi8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smdmRfc291cmNlPTIxYTg4NDRlZGE0MTE4N2M2ZTIxYzhmYTdjNTNiZThl\" data-background-image=\"https://www.bilibili.com/favicon.ico\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhFNDExdDdSTi8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smdmRfc291cmNlPTIxYTg4NDRlZGE0MTE4N2M2ZTIxYzhmYTdjNTNiZThl\">PyTorch深度学习快速入门教程</span>\n          <p class=\"desc\">PyTorch深度学习</p>\n          </div></div></div>\n<ul>\n<li>课程资料</li>\n</ul>\n<div class=\"links\"><div class=\"item\" title=\"我是土堆\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUN2VElqdVhUNHRNb25HMFdsdEYtdlE/cHdkPWpubnA=\" data-background-image=\"http://www.baidu.com/img/baidu_logo.gif\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUN2VElqdVhUNHRNb25HMFdsdEYtdlE/cHdkPWpubnA=\">课程资源</span>\n          <p class=\"desc\">PyTorch深度学习快速入门教程的课程资源</p>\n          </div></div></div>\n<h1 id=\"代码\"><a class=\"markdownIt-Anchor\" href=\"#代码\">#</a> 代码</h1>\n<h2 id=\"pytorch环境的配置及安装\"><a class=\"markdownIt-Anchor\" href=\"#pytorch环境的配置及安装\">#</a> PyTorch 环境的配置及安装</h2>\n<ul>\n<li>用 conda 指令建造一个 python（3.6）的 conda 环境</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">conda</span> <span class=\"string\">create</span> <span class=\"string\">-n</span> <span class=\"string\">pytorch</span> <span class=\"string\">python=3.6</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>pytorch 是 conda 环境的名字</p>\n<ul>\n<li>激活创建的 conda 环境</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">conda</span> <span class=\"string\">activate</span> <span class=\"string\">pytorch</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看 GPUA 的版本</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```cmd</span></span><br><span class=\"line\"><span class=\"string\">nvidia-smi</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装 pytorch</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">pip3</span> <span class=\"string\">install</span> <span class=\"string\">torch</span> <span class=\"string\">torchvision</span> <span class=\"string\">torchaudio</span> <span class=\"string\">-i</span> <span class=\"string\">https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>博主推荐 windows 安装 pytorch 使用 conda</p>\n<ul>\n<li>判断是否安装成功</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">pip</span> <span class=\"string\">list</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>如果存在 torch 等即安装成功</p>\n<ul>\n<li>检查 PyTorch 是否支持 CUDA</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">print(torch.cuda.is_available())</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"python编辑器的选择安装及配置\"><a class=\"markdownIt-Anchor\" href=\"#python编辑器的选择安装及配置\">#</a> python 编辑器的选择，安装及配置</h2>\n<h3 id=\"pycharm\"><a class=\"markdownIt-Anchor\" href=\"#pycharm\">#</a> PyCharm</h3>\n<ul>\n<li>下载地址</li>\n</ul>\n<div class=\"links\"><div class=\"item\" title=\"Copyright © 2025 JetBrains s.r.o. JetBrains and the JetBrains logo are trademarks of JetBrains s.r.o.\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9weWNoYXJtLw==\" data-background-image=\"https://resources.jetbrains.com.cn/storage/products/company/brand/logos/jetbrains.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9weWNoYXJtLw==\">PyCharm</span>\n          <p class=\"desc\">PyCharm下载地址</p>\n          </div></div></div>\n<p>高版本创建项目之后选择系统解释器，按照 up 主的地址找到 python.exe</p>\n<h3 id=\"jupyter\"><a class=\"markdownIt-Anchor\" href=\"#jupyter\">#</a> Jupyter</h3>\n<ul>\n<li>安装 nb_conda_kernels<br>\nnb_conda 包要求的 Python 版本范围是：<br>\nPython 2.7<br>\nPython 3.5<br>\nPython 3.6<br>\nPython 3.7<br>\nPython 3.8<br>\n 超过以上范围的可以使用 nb_conda_kernels, 提供了 nb_conda 类似的功能</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">activate</span> <span class=\"string\">环境名称</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">conda</span> <span class=\"string\">install</span> <span class=\"string\">nb_conda</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">conda</span> <span class=\"string\">install</span> <span class=\"string\">ipykernel</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">conda</span> <span class=\"string\">install</span> <span class=\"string\">-n</span> <span class=\"string\">环境名称</span> <span class=\"string\">ipykernel</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">python</span> <span class=\"string\">-m</span> <span class=\"string\">ipykernel</span> <span class=\"string\">install</span> <span class=\"string\">--user</span> <span class=\"string\">--name</span> <span class=\"string\">环境名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>测试是否安装好 jupyter<br>\n 进入 home</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">jupyter</span> <span class=\"string\">notebook</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<p>点击 new，选择 pytorch，输入以下内容并运行（Shift+Enter），返回 true 即是成功</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```Anaconda</span> <span class=\"string\">Prompt</span></span><br><span class=\"line\"><span class=\"string\">import</span> <span class=\"string\">torch</span></span><br><span class=\"line\"><span class=\"string\">torch.cuda.is_available()</span></span><br><span class=\"line\"><span class=\"string\">```</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"python学习中的需要的两个函数\"><a class=\"markdownIt-Anchor\" href=\"#python学习中的需要的两个函数\">#</a> Python 学习中的需要的两个函数</h2>\n<ul>\n<li>dir () 打开</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">dir(pytorch)</span></span><br><span class=\"line\"><span class=\"string\">dir(pytorch.cuda)</span></span><br><span class=\"line\"><span class=\"string\">dir(pytorch.cuda.is_available())</span></span><br></pre></td></tr></table></figure>\n<p>知道列出的输出是具体的函数（<strong>XXX</strong>）即可使用 help 来查看使用方式</p>\n<ul>\n<li>help () 说明书</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">help(pytorch.cuda.is_available)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用对比\"><a class=\"markdownIt-Anchor\" href=\"#使用对比\">#</a> 使用对比</h2>\n<ul>\n<li>python 文件<br>\n python 文件运行的话，块是所有代码，每次运行都是从头开始运行<br>\n优点：通用，传播方便，适用于大型项目<br>\n缺点：需要从头运行</li>\n<li>pycharm 控制台<br>\n python 控制台以每一行（任意行）为一块（Shift+Enter）<br>\n优点：可以显示每个变量属性<br>\n缺点：不利于代码阅读及修改</li>\n<li>jupyter<br>\nJupyter 以任意行为块运行的<br>\n优点：利于代码阅读及修改<br>\n缺点：环境据要配置</li>\n</ul>\n",
            "tags": []
        }
    ]
}